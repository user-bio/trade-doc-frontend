{"version":3,"sources":["redux/navbar.js","redux/rootReducer.js","redux/store.js","utility/context/ThemeColors.js","@core/components/spinner/Fallback-spinner.js","@core/components/ripple-button/index.js","serviceWorker.js","index.js","configs/themeConfig.js","assets/images/logo/logo.png","redux/layout.js","configs/authConfig.js"],"names":["getBookmarks","createAsyncThunk","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","axios","get","sent","abrupt","data","suggestions","bookmarks","stop","updateBookmarked","_ref2","_callee2","id","_context2","post","_x","apply","arguments","layoutSlice","createSlice","name","initialState","query","reducers","handleSearchQuery","state","action","payload","extraReducers","builder","addCase","fulfilled","objectToUpdate","find","item","isBookmarked","bookmarkIndex","findIndex","x","push","splice","rootReducer","actions","navbar","layout","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ThemeColors","createContext","ThemeContext","_ref","children","_useState","useState","_useState2","_slicedToArray","colors","setColors","useEffect","window","getHex","color","getComputedStyle","document","body","getPropertyValue","trim","obj","primary","light","concat","main","secondary","success","danger","warning","info","dark","_objectSpread","_jsx","Provider","value","SpinnerComponent","_jsxs","className","src","logo","alt","Button","Ripple","onClick","rest","_objectWithoutProperties","_excluded","mounted","setMounted","_useState3","_useState4","isRippling","setIsRippling","_useState5","y","_useState6","coords","setCoords","setTimeout","classnames","_defineProperty","e","rect","target","getBoundingClientRect","clientX","left","clientY","top","style","Boolean","location","hostname","match","LazyApp","lazy","container","getElementById","root","createRoot","msalInstance","PublicClientApplication","msalConfig","render","MsalProvider","instance","BrowserRouter","Suspense","fallback","Spinner","Toaster","position","themeConfig","toastPosition","toastOptions","navigator","serviceWorker","ready","then","registration","unregister","app","appName","appLogoImage","require","default","isRTL","skin","type","contentWidth","menu","isHidden","isCollapsed","backgroundColor","footer","customizer","scrollTop","localStorage","getItem","JSON","parse","initialSkin","initialDirection","lastLayout","menuCollapsed","initialMenuCollapsed","footerType","navbarType","menuHidden","navbarColor","handleRTL","setItem","stringify","handleSkin","handleLayout","handleFooterType","handleNavbarType","handleMenuHidden","handleLastLayout","handleNavbarColor","handleContentWidth","handleMenuCollapsed","_layoutSlice$actions","auth","clientId","authority","redirectUri","cache","cacheLocation","storeAuthStateInCookie","loginRequest","scopes"],"mappings":"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","file":"static/js/main.66052d7a.chunk.js","sourcesContent":["// ** Redux Imports\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\"\n\n// ** Axios Imports\nimport axios from \"axios\"\n\nexport const getBookmarks = createAsyncThunk(\n  \"layout/getBookmarks\",\n  async () => {\n    const response = await axios.get(\"/api/bookmarks/data\")\n    return {\n      data: response.data.suggestions,\n      bookmarks: response.data.bookmarks\n    }\n  }\n)\n\nexport const updateBookmarked = createAsyncThunk(\n  \"layout/updateBookmarked\",\n  async (id) => {\n    await axios.post(\"/api/bookmarks/update\", { id })\n    return id\n  }\n)\n\nexport const layoutSlice = createSlice({\n  name: \"layout\",\n  initialState: {\n    query: \"\",\n    bookmarks: [],\n    suggestions: []\n  },\n  reducers: {\n    handleSearchQuery: (state, action) => {\n      state.query = action.payload\n    }\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(getBookmarks.fulfilled, (state, action) => {\n        state.suggestions = action.payload.data\n        state.bookmarks = action.payload.bookmarks\n      })\n      .addCase(updateBookmarked.fulfilled, (state, action) => {\n        let objectToUpdate\n\n        // ** find & update object\n        state.suggestions.find((item) => {\n          if (item.id === action.payload) {\n            item.isBookmarked = !item.isBookmarked\n            objectToUpdate = item\n          }\n        })\n\n        // ** Get index to add or remove bookmark from array\n        const bookmarkIndex = state.bookmarks.findIndex(\n          (x) => x.id === action.payload\n        )\n\n        if (bookmarkIndex === -1) {\n          state.bookmarks.push(objectToUpdate)\n        } else {\n          state.bookmarks.splice(bookmarkIndex, 1)\n        }\n      })\n  }\n})\n\nexport const { handleSearchQuery } = layoutSlice.actions\n\nexport default layoutSlice.reducer\n","// ** Reducers Imports\nimport layout from \"./layout\"\nimport navbar from \"./navbar\"\n\nconst rootReducer = { navbar, layout }\n\nexport default rootReducer\n","// ** Redux Imports\nimport rootReducer from \"./rootReducer\"\nimport { configureStore } from \"@reduxjs/toolkit\"\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: (getDefaultMiddleware) => {\n    return getDefaultMiddleware({\n      serializableCheck: false\n    })\n  }\n})\n\nexport { store }\n","// ** React Imports\nimport { useEffect, useState, createContext } from \"react\"\n\n// ** Create Context\nconst ThemeColors = createContext()\n\nconst ThemeContext = ({ children }) => {\n  // ** State\n  const [colors, setColors] = useState({})\n\n  //** ComponentDidMount\n  useEffect(() => {\n    if (window !== \"undefined\") {\n      //** Get variable value\n      const getHex = (color) => window.getComputedStyle(document.body).getPropertyValue(color).trim()\n\n      //** Colors obj\n      const obj = {\n        primary: {\n          light: getHex(\"--bs-primary\").concat(\"1a\"),\n          main: getHex(\"--bs-primary\")\n        },\n        secondary: {\n          light: getHex(\"--bs-secondary\").concat(\"1a\"),\n          main: getHex(\"--bs-secondary\")\n        },\n        success: {\n          light: getHex(\"--bs-success\").concat(\"1a\"),\n          main: getHex(\"--bs-success\")\n        },\n        danger: {\n          light: getHex(\"--bs-danger\").concat(\"1a\"),\n          main: getHex(\"--bs-danger\")\n        },\n        warning: {\n          light: getHex(\"--bs-warning\").concat(\"1a\"),\n          main: getHex(\"--bs-warning\")\n        },\n        info: {\n          light: getHex(\"--bs-info\").concat(\"1a\"),\n          main: getHex(\"--bs-info\")\n        },\n        dark: {\n          light: getHex(\"--bs-dark\").concat(\"1a\"),\n          main: getHex(\"--bs-dark\")\n        }\n      }\n\n      setColors({ ...obj })\n    }\n  }, [])\n\n  return (\n    <ThemeColors.Provider value={{ colors }}>{children}</ThemeColors.Provider>\n  )\n}\n\nexport { ThemeColors, ThemeContext }\n","// ** Logo\nimport logo from \"@src/assets/images/logo/logo.png\"\n\nconst SpinnerComponent = () => {\n  return (\n    <div className=\"fallback-spinner app-loader\">\n      <img className=\"fallback-logo\" src={logo} alt=\"logo\" />\n      <div className=\"loading\">\n        <div className=\"effect-1 effects\"></div>\n        <div className=\"effect-2 effects\"></div>\n        <div className=\"effect-3 effects\"></div>\n      </div>\n    </div>\n  )\n}\n\nexport default SpinnerComponent\n","// ** React Imports\nimport { useState, useEffect } from \"react\"\n\n// ** Third Party Components\nimport classnames from \"classnames\"\n\n// ** Reactstrap Imports\nimport { Button } from \"reactstrap\"\n\n// ** Styles\nimport \"./ripple-button.scss\"\n\nconst RippleButton = ({ className, children, onClick, ...rest }) => {\n  // ** States\n  const [mounted, setMounted] = useState(false)\n  const [isRippling, setIsRippling] = useState(false)\n  const [coords, setCoords] = useState({ x: -1, y: -1 })\n\n  // ** Toggle mounted on mount & unmount\n  useEffect(() => {\n    setMounted(true)\n    return () => setMounted(false)\n  }, [])\n\n  // ** Check for coords and set ripple\n  useEffect(() => {\n    if (mounted) {\n      if (coords.x !== -1 && coords.y !== -1) {\n        setIsRippling(true)\n        setTimeout(() => setIsRippling(false), 500)\n      } else {\n        setIsRippling(false)\n      }\n    }\n  }, [coords])\n\n  // ** Reset Coords on ripple end\n  useEffect(() => {\n    if (mounted) {\n      if (!isRippling) setCoords({ x: -1, y: -1 })\n    }\n  }, [isRippling])\n\n  return (\n    <Button\n      className={classnames(\"waves-effect\", {\n        [className]: className\n      })}\n      onClick={(e) => {\n        const rect = e.target.getBoundingClientRect()\n        setCoords({ x: e.clientX - rect.left, y: e.clientY - rect.top })\n        if (onClick) {\n          onClick(e)\n        }\n      }}\n      {...rest}\n    >\n      {children}\n      {isRippling ? (\n        <span\n          className=\"waves-ripple\"\n          style={{\n            left: coords.x,\n            top: coords.y\n          }}\n        ></span>\n      ) : null}\n    </Button>\n  )\n}\n\n// ** PropTypes\nRippleButton.propTypes = {\n  ...Button.propTypes\n}\n\nButton.Ripple = RippleButton\n","/*eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker === null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType !== null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","// ** React Imports\nimport { Suspense, lazy } from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport { BrowserRouter } from \"react-router-dom\";\n\n// ** Redux Imports\nimport { store } from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\n// ** ThemeColors Context\n\nimport { ThemeContext } from \"./utility/context/ThemeColors\";\n\n// ** ThemeConfig\nimport themeConfig from \"./configs/themeConfig\";\n\n// ** Toast\nimport { Toaster } from \"react-hot-toast\";\n\n// ** Spinner (Splash Screen)\nimport Spinner from \"./@core/components/spinner/Fallback-spinner\";\n\n// ** Ripple Button\nimport \"./@core/components/ripple-button\";\n\n// ** PrismJS\nimport \"prismjs\";\nimport \"prismjs/themes/prism-tomorrow.css\";\nimport \"prismjs/components/prism-jsx.min\";\n\n// ** React Perfect Scrollbar\nimport \"react-perfect-scrollbar/dist/css/styles.css\";\n\n// ** React Hot Toast Styles\nimport \"@styles/react/libs/react-hot-toasts/react-hot-toasts.scss\";\n\n// ** Core styles\nimport \"./@core/assets/fonts/feather/iconfont.css\";\nimport \"./@core/scss/core.scss\";\nimport \"./assets/scss/style.scss\";\n\n// ** Service Worker\nimport * as serviceWorker from \"./serviceWorker\";\n\n// ** Lazy load app\nconst LazyApp = lazy(() => import(\"./App\"));\n\nconst container = document.getElementById(\"root\");\nconst root = createRoot(container);\n\n//azure\nimport { PublicClientApplication } from \"@azure/msal-browser\";\nimport { MsalProvider } from \"@azure/msal-react\";\nimport { msalConfig } from \"./configs/authConfig\";\n\nconst msalInstance = new PublicClientApplication(msalConfig);\n\nroot.render(\n  <MsalProvider instance={msalInstance}>\n    <BrowserRouter>\n      <Provider store={store}>\n        <Suspense fallback={<Spinner />}>\n          <ThemeContext>\n            <LazyApp />\n            <Toaster\n              position={themeConfig.layout.toastPosition}\n              toastOptions={{ className: \"react-hot-toast\" }}\n            />\n          </ThemeContext>\n        </Suspense>\n      </Provider>\n    </BrowserRouter>\n  </MsalProvider>\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// You can customize the template with the help of this file\n\n//Template config options\nconst themeConfig = {\n  app: {\n    appName: \"Bioseta\",\n    appLogoImage: require(\"@src/assets/images/logo/logo.png\").default\n  }, \n  layout: {\n    isRTL: false,\n    skin: \"light\", // light, dark, bordered, semi-dark\n    type: \"vertical\", // vertical, horizontal\n    contentWidth: \"boxed\", // full, boxed\n    menu: {\n      isHidden: false,\n      isCollapsed: false\n    },\n    navbar: {\n      // ? For horizontal menu, navbar type will work for navMenu type\n      type: \"floating\", // static , sticky , floating, hidden\n      backgroundColor: \"white\" // BS color options [primary, success, etc]\n    },\n    footer: {\n      type: \"static\" // static, sticky, hidden\n    },\n    customizer: false,\n    scrollTop: true, // Enable scroll to top button\n    toastPosition: \"top-right\" // top-left, top-center, top-right, bottom-left, bottom-center, bottom-right\n  }\n}\n\nexport default themeConfig\n","export default __webpack_public_path__ + \"static/media/logo.5d431fb9.png\";","// ** Redux Imports\nimport { createSlice } from \"@reduxjs/toolkit\"\n\n// ** ThemeConfig Import\nimport themeConfig from \"@configs/themeConfig\"\n\nconst initialMenuCollapsed = () => {\n  const item = window.localStorage.getItem(\"menuCollapsed\")\n  //** Parse stored json or if none return initialValue\n  return item ? JSON.parse(item) : themeConfig.layout.menu.isCollapsed\n}\n\nconst initialDirection = () => {\n  const item = window.localStorage.getItem(\"direction\")\n  //** Parse stored json or if none return initialValue\n  return item ? JSON.parse(item) : themeConfig.layout.isRTL\n}\n\nconst initialSkin = () => {\n  const item = window.localStorage.getItem(\"skin\")\n  //** Parse stored json or if none return initialValue\n  return item ? JSON.parse(item) : themeConfig.layout.skin\n}\n\nexport const layoutSlice = createSlice({\n  name: \"layout\",\n  initialState: {\n    skin: initialSkin(),\n    isRTL: initialDirection(),\n    layout: themeConfig.layout.type,\n    lastLayout: themeConfig.layout.type,\n    menuCollapsed: initialMenuCollapsed(),\n    footerType: themeConfig.layout.footer.type,\n    navbarType: themeConfig.layout.navbar.type,\n    menuHidden: themeConfig.layout.menu.isHidden,\n    contentWidth: themeConfig.layout.contentWidth,\n    navbarColor: themeConfig.layout.navbar.backgroundColor\n  },\n  reducers: {\n    handleRTL: (state, action) => {\n      state.isRTL = action.payload\n      window.localStorage.setItem(\"direction\", JSON.stringify(action.payload))\n    },\n    handleSkin: (state, action) => {\n      state.skin = action.payload\n      window.localStorage.setItem(\"skin\", JSON.stringify(action.payload))\n    },\n    handleLayout: (state, action) => {\n      state.layout = action.payload\n    },\n    handleFooterType: (state, action) => {\n      state.footerType = action.payload\n    },\n    handleNavbarType: (state, action) => {\n      state.navbarType = action.payload\n    },\n    handleMenuHidden: (state, action) => {\n      state.menuHidden = action.payload\n    },\n    handleLastLayout: (state, action) => {\n      state.lastLayout = action.payload\n    },\n    handleNavbarColor: (state, action) => {\n      state.navbarColor = action.payload\n    },\n    handleContentWidth: (state, action) => {\n      state.contentWidth = action.payload\n    },\n    handleMenuCollapsed: (state, action) => {\n      state.menuCollapsed = action.payload\n      window.localStorage.setItem(\n        \"menuCollapsed\",\n        JSON.stringify(action.payload)\n      )\n    }\n  }\n})\n\nexport const {\n  handleRTL,\n  handleSkin,\n  handleLayout,\n  handleLastLayout,\n  handleMenuHidden,\n  handleNavbarType,\n  handleFooterType,\n  handleNavbarColor,\n  handleContentWidth,\n  handleMenuCollapsed\n} = layoutSlice.actions\n\nexport default layoutSlice.reducer\n","// export const msalConfig = {\n//   auth: {\n//     clientId: \"bcb98145-16d8-4bc3-93f3-9a768c35c7b1\",\n//     authority: \"https://login.microsoftonline.com/834b7c70-3687-4751-aa2e-ef3bed9f9d25\", // This is a URL (e.g. https://login.microsoftonline.com/{your tenant ID})\n//     redirectUri: \"https://bioseta.s3digital.com.br/login\",\n//   },\n//   cache: {\n//     cacheLocation: \"localStorage\", // This configures where your cache will be stored\n//     storeAuthStateInCookie: false, // Set this to \"true\" if you are having issues on IE11 or Edge\n//   }\n// };\n\n// export const msalConfig = {\n//   auth: {\n//     clientId: \"13b51e74-e98f-4a39-a119-444cf0dd87da\",\n//     authority: \"https://login.microsoftonline.com/834b7c70-3687-4751-aa2e-ef3bed9f9d25\", // This is a URL (e.g. https://login.microsoftonline.com/{your tenant ID})\n//     redirectUri: \"http://localhost:3000/login\",\n//   },\n//   cache: {\n//     cacheLocation: \"localStorage\", // This configures where your cache will be stored\n//     storeAuthStateInCookie: false, // Set this to \"true\" if you are having issues on IE11 or Edge\n//   }\n// };\n\nexport const msalConfig = {\n  auth: {\n    clientId: \"f22d5fc7-ad7c-49b6-baee-599522c1a6f7\",\n    authority: \"https://login.microsoftonline.com/834b7c70-3687-4751-aa2e-ef3bed9f9d25\", // This is a URL (e.g. https://login.microsoftonline.com/{your tenant ID})\n    redirectUri: \"https://tradedoc.bioseta.com.br/login\",\n  },\n  cache: {\n    cacheLocation: \"localStorage\", // This configures where your cache will be stored\n    storeAuthStateInCookie: false, // Set this to \"true\" if you are having issues on IE11 or Edge\n  }\n};\n  \n  // Add scopes here for ID token to be used at Microsoft identity platform endpoints.\n  export const loginRequest = {\n   scopes: [\"user.read\", \"mail.send\"]\n  };\n  \n  // Add the endpoints here for Microsoft Graph API services you'd like to use.\n  export const graphConfig = {\n      graphMeEndpoint: \"https://graph.microsoft.com/v1.0/me\"\n  };"],"sourceRoot":""}