{"version":3,"sources":["views/clientes/dominios/form/index.jsx","components/isAzure/index.jsx","@core/components/breadcrumbs/index.js"],"names":["MySwal","withReactContent","Swal","DominiosForm","navigate","useNavigate","id","useParams","item","_useState","useState","_useState2","_slicedToArray","setCliente","_useState3","_useState4","setDominio","_useState5","_useState6","data","setData","isAzure","_useForm","useForm","reset","control","handleSubmit","setError","formState","errors","undefined","useEffect","httpRequest","concat","method","token","getToken","then","res","body","dominio","_jsxs","Fragment","children","_jsx","Breadcrumbs","title","link","Row","Col","sm","Card","CardBody","Form","onSubmit","dados","cliente_id","fire","icon","text","customClass","confirmButton","className","xl","md","Label","for","Controller","defaultValue","name","render","_ref","field","Input","_objectSpread","placeholder","classnames","length","Button","type","color","jwt","require","isAuthenticated","useIsAuthenticated","verify","BreadCrumbs","props","Breadcrumb","BreadcrumbItem","tag","Link","to","map","index","Wrapper","isLastItem","active"],"mappings":"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","file":"static/js/47.283a4ac4.chunk.js","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\nimport {\n  Card,\n  CardBody,\n  Form,\n  Label,\n  Input,\n  Row,\n  Col,\n  Button,\n} from \"reactstrap\";\nimport Select from \"react-select\";\nimport { selectThemeColors } from \"@utils\";\n\n// ** Custom Components\nimport Breadcrumbs from \"@components/breadcrumbs\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport classnames from \"classnames\";\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nconst MySwal = withReactContent(Swal);\nimport { useNavigate, useParams } from \"react-router-dom\";\n\n//components\nimport isAzure from \"../../../../components/isAzure\";\nimport { getToken } from \"../../../../services/Auth\";\nimport { httpRequest } from \"../../../../services/Api\";\n\nconst DominiosForm = () => {\n  let navigate = useNavigate();\n\n  let { id } = useParams();\n  let { item } = useParams();\n  const [cliente, setCliente] = useState(null);\n  const [contato, setDominio] = useState(null);\n  const [data, setData] = useState(null);\n\n  isAzure();\n\n  const {\n    reset,\n    control,\n    setError,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n\n  if (id === undefined) {\n    navigate(`/clientes`);\n  }\n\n  useEffect(() => {\n    httpRequest(`clientes/${id}`, {\n      method: \"GET\",\n      token: getToken(),\n    }).then((res) => {\n      setCliente(res.body);\n    });\n  }, []);\n\n  if (item !== undefined) {\n    useEffect(() => {\n      httpRequest(`clientes/dominios/${item}`, {\n        method: \"GET\",\n        token: getToken(),\n      }).then((res) => {\n        reset({\n          dominio: res.body.dominio,\n        });\n        setDominio(res.body);\n      });\n    }, []);\n  }\n\n  const onSubmit = (data) => {\n    setData(data);\n    if (data.dominio !== \"\") {\n      const dados = {\n        cliente_id: id,\n        dominio: data.dominio\n      };\n      if (item === undefined) {\n        httpRequest(`clientes/dominios`, {\n          method: \"POST\",\n          body: dados,\n          token: getToken(),\n        }).then((res) => {\n          MySwal.fire({\n            icon: \"success\",\n            title: \"Sucesso!\",\n            text: \"Cadastro realizada com sucesso.\",\n            customClass: {\n              confirmButton: \"btn btn-success\",\n            },\n          });\n          navigate(`/clientes/dominios/${id}`);\n        });\n      } else {\n        httpRequest(`clientes/dominios/${item}`, {\n          method: \"PUT\",\n          body: dados,\n          token: getToken(),\n        }).then((res) => {\n          MySwal.fire({\n            icon: \"success\",\n            title: \"Sucesso!\",\n            text: \"Cadastro atualizado com sucesso.\",\n            customClass: {\n              confirmButton: \"btn btn-success\",\n            },\n          });\n          navigate(`/clientes/dominios/${id}`);\n        });\n      }\n    }\n  };\n\n  return (\n    <Fragment>\n      <Breadcrumbs\n        title=\"Clientes\"\n        data={[\n          { title: \"Clientes\", link: \"/clientes\" },\n          //{ title: `${cliente.nome_fantasia}`, link: `/clientes/form/${id}` },\n          { title: \"Contatos\", link: `/clientes/dominios/${id}` },\n          { title: \"Novo Domínio\" },\n        ]}\n      />\n      <Row>\n        <Col sm=\"12\">\n          <Card>\n            <CardBody>\n              <Form onSubmit={handleSubmit(onSubmit)}>\n                <Row>\n                  <Col className=\"mb-1\" xl=\"12\" md=\"12\" sm=\"12\">\n                    <Label className=\"form-label\" for=\"nome\">\n                      Nome\n                    </Label>\n                    <Controller\n                      defaultValue=\"\"\n                      control={control}\n                      id=\"dominio\"\n                      name=\"dominio\"\n                      render={({ field }) => (\n                        <Input\n                          placeholder=\"Domínio\"\n                          className={classnames(\"form-control\", {\n                            \"is-invalid\":\n                              data !== null &&\n                              (data.dominio === null || !data.dominio.length),\n                          })}\n                          {...field}\n                        />\n                      )}\n                    />\n                  </Col>\n                </Row>\n                <div className=\" text-end w-100\">\n                  <Button type=\"submit\" color=\"primary\">\n                    Salvar\n                  </Button>\n                </div>\n              </Form>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n    </Fragment>\n  );\n};\n\nexport default DominiosForm;\n","import { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useIsAuthenticated } from \"@azure/msal-react\";\nconst jwt = require(\"jsonwebtoken\");\n\nimport { getToken } from \"../../services/Auth\";\n\nconst isAzure = () => {\n  let navigate = useNavigate();\n  const isAuthenticated = useIsAuthenticated();\n\n  useEffect(() => {\n    if (!isAuthenticated) {\n      navigate(\"/login\");\n    }else{\n      const payload = jwt.verify(getToken(), \"aIebX2X9oCZE1gCNFlE0lSxPAKVqJfL7+8WUcMVcz677+V6JnRomzKfg03EIR6VlSAf2kWQSiiTDP8MF3Js7is9i7+YdCPTw+sifbuNeeCZWLr1QJCrGaRacvD4qKzzpXNkNeKhDv0h6rQW/JJ8dX94rK5esVxtbupCptX8HzfL8rmUSLI/l78ddYfkb+RkuHH5PY8TYpdUBv1h3qUYo4L62QUX/Ze5wqhYUuhPvmOAYIoz7j4SABxT2JciOn9Wy1wraZ268VzhgLilykQBH5QC6lbNyfIegB79R0QYQrYk5IL1gfmxY2lKIDeCYB9p8NIF8qfCyD/RJMQOUEv9z9A==\");\n      if(!payload) {\n        navigate(\"/login\");\n      }\n    }\n  }, [isAuthenticated]);\n}\n\nexport default isAzure;","// ** React Imports\nimport { Fragment } from \"react\"\nimport { Link } from \"react-router-dom\"\n\n// ** Third Party Components\nimport Proptypes from \"prop-types\"\nimport classnames from \"classnames\"\n\n// ** Reactstrap Imports\nimport {\n  Breadcrumb,\n  BreadcrumbItem\n} from \"reactstrap\"\n\nconst BreadCrumbs = (props) => {\n  // ** Props\n  const { data, title } = props\n\n  const renderBreadCrumbs = () => {\n    return data.map((item, index) => {\n      const Wrapper = item.link ? Link : Fragment\n      const isLastItem = data.length - 1 === index\n      return (\n        <BreadcrumbItem\n          tag=\"li\"\n          key={index}\n          active={!isLastItem}\n          className={classnames({ \"text-primary\": !isLastItem })}\n        >\n          <Wrapper {...(item.link ? { to: item.link } : {})}>\n            {item.title}\n          </Wrapper>\n        </BreadcrumbItem>\n      )\n    })\n  }\n\n  return (\n    <div className=\"content-header row\">\n      <div className=\"content-header-left col-md-9 col-12 mb-2\">\n        <div className=\"row breadcrumbs-top\">\n          <div className=\"col-12\">\n            {title ? (\n              <h2 className=\"content-header-title float-start mb-0\">{title}</h2>\n            ) : (\n              \"\"\n            )}\n            <div className=\"breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12\">\n              <Breadcrumb>\n                <BreadcrumbItem tag=\"li\">\n                  <Link to=\"/\">Home</Link>\n                </BreadcrumbItem>\n                {renderBreadCrumbs()}\n              </Breadcrumb>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default BreadCrumbs\n\n// ** PropTypes\nBreadCrumbs.propTypes = {\n  title: Proptypes.string.isRequired,\n  data: Proptypes.arrayOf(\n    Proptypes.shape({\n      link: Proptypes.string,\n      title: Proptypes.string.isRequired\n    })\n  )\n}\n"],"sourceRoot":""}