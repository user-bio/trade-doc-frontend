{"version":3,"sources":["components/isAzure/index.jsx","@core/components/breadcrumbs/index.js","services/Funcoes.jsx","views/logs/lista/data.js","views/logs/lista/tabela.js","views/logs/lista/index.js"],"names":["jwt","require","isAzure","navigate","useNavigate","isAuthenticated","useIsAuthenticated","useEffect","verify","getToken","BreadCrumbs","props","data","title","className","tag","to","map","item","index","Wrapper","link","Link","Fragment","isLastItem","length","active","classnames","formataCPF","cpf","replace","formataCNPJ","cnpj","limpaValores","valor","match","join","dataPTBR","Date","toLocaleString","year","month","day","converterData","partes","split","converterDataAnoMes","coluns","name","reorder","sortable","maxWidth","selector","row","id","minWidth","Usuario","first_name","tipo","descricao","ExpandableTable","email","language","objeto","DataTablesReOrder","useState","dados","setDados","currentPage","httpRequest","method","token","then","res","body","noHeader","pagination","expandableRows","columns","expandOnRowClicked","sortIcon","size","paginationDefaultPage","expandableRowsComponent","paginationRowsPerPageOptions","paginationPerPage","ClientesLista","sm"],"mappings":"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","file":"static/js/40.5c385d0f.chunk.js","sourcesContent":["import { useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useIsAuthenticated } from \"@azure/msal-react\";\r\nconst jwt = require(\"jsonwebtoken\");\r\n\r\nimport { getToken } from \"../../services/Auth\";\r\n\r\nconst isAzure = () => {\r\n  let navigate = useNavigate();\r\n  const isAuthenticated = useIsAuthenticated();\r\n\r\n  useEffect(() => {\r\n    if (!isAuthenticated) {\r\n      navigate(\"/login\");\r\n    }else{\r\n      const payload = jwt.verify(getToken(), \"aIebX2X9oCZE1gCNFlE0lSxPAKVqJfL7+8WUcMVcz677+V6JnRomzKfg03EIR6VlSAf2kWQSiiTDP8MF3Js7is9i7+YdCPTw+sifbuNeeCZWLr1QJCrGaRacvD4qKzzpXNkNeKhDv0h6rQW/JJ8dX94rK5esVxtbupCptX8HzfL8rmUSLI/l78ddYfkb+RkuHH5PY8TYpdUBv1h3qUYo4L62QUX/Ze5wqhYUuhPvmOAYIoz7j4SABxT2JciOn9Wy1wraZ268VzhgLilykQBH5QC6lbNyfIegB79R0QYQrYk5IL1gfmxY2lKIDeCYB9p8NIF8qfCyD/RJMQOUEv9z9A==\");\r\n      if(!payload) {\r\n        navigate(\"/login\");\r\n      }\r\n    }\r\n  }, [isAuthenticated]);\r\n}\r\n\r\nexport default isAzure;","// ** React Imports\r\nimport { Fragment } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\n// ** Third Party Components\r\nimport Proptypes from \"prop-types\"\r\nimport classnames from \"classnames\"\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem\r\n} from \"reactstrap\"\r\n\r\nconst BreadCrumbs = (props) => {\r\n  // ** Props\r\n  const { data, title } = props\r\n\r\n  const renderBreadCrumbs = () => {\r\n    return data.map((item, index) => {\r\n      const Wrapper = item.link ? Link : Fragment\r\n      const isLastItem = data.length - 1 === index\r\n      return (\r\n        <BreadcrumbItem\r\n          tag=\"li\"\r\n          key={index}\r\n          active={!isLastItem}\r\n          className={classnames({ \"text-primary\": !isLastItem })}\r\n        >\r\n          <Wrapper {...(item.link ? { to: item.link } : {})}>\r\n            {item.title}\r\n          </Wrapper>\r\n        </BreadcrumbItem>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"content-header row\">\r\n      <div className=\"content-header-left col-md-9 col-12 mb-2\">\r\n        <div className=\"row breadcrumbs-top\">\r\n          <div className=\"col-12\">\r\n            {title ? (\r\n              <h2 className=\"content-header-title float-start mb-0\">{title}</h2>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            <div className=\"breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12\">\r\n              <Breadcrumb>\r\n                <BreadcrumbItem tag=\"li\">\r\n                  <Link to=\"/\">Home</Link>\r\n                </BreadcrumbItem>\r\n                {renderBreadCrumbs()}\r\n              </Breadcrumb>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default BreadCrumbs\r\n\r\n// ** PropTypes\r\nBreadCrumbs.propTypes = {\r\n  title: Proptypes.string.isRequired,\r\n  data: Proptypes.arrayOf(\r\n    Proptypes.shape({\r\n      link: Proptypes.string,\r\n      title: Proptypes.string.isRequired\r\n    })\r\n  )\r\n}\r\n","export function formataCPF(cpf) {\r\n    //retira os caracteres indesejados...\r\n    cpf = cpf.replace(/[^\\d]/g, \"\");\r\n  \r\n    //realizar a formatação...\r\n    return cpf.replace(/(\\d{3})(\\d{3})(\\d{3})(\\d{2})/, \"$1.$2.$3-$4\");\r\n  }\r\n\r\n  \r\n  export function formataCNPJ(cnpj) {\r\n    //retira os caracteres indesejados...\r\n    cnpj = cnpj.replace(/[^\\d]/g, \"\");\r\n  \r\n    //realizar a formatação...\r\n    return cnpj.replace(/(\\d{2})(\\d{3})(\\d{3})(\\d{4})(\\d{2})/, \"$1.$2.$3/$4-$5\");\r\n  }\r\n\r\n  export function limpaValores(valor) {\r\n    return valor.match(/\\d/g).join(\"\");\r\n  }\r\n  \r\n  export function dataPTBR(valor) {\r\n    let date = new Date(valor).toLocaleString(\"pt-BR\", {\r\n      year: \"numeric\",\r\n      month: \"numeric\",\r\n      day: \"numeric\",\r\n    });\r\n    return date;\r\n  }\r\n\r\n  export function converterData(data) {\r\n    const partes = data.split('/');\r\n    const dataReorganizada = [partes[2], partes[1], partes[0]];\r\n    return dataReorganizada.join('-');\r\n  }\r\n\r\n  export function converterDataAnoMes(data) {\r\n    const partes = data.split('/');\r\n    const dataReorganizada = [partes[1], partes[0]];\r\n    return dataReorganizada.join('-');\r\n  }","import React from \"react\";\r\nimport Highlight from \"react-highlight\";\r\n\r\nimport { dataPTBR } from \"../../../services/Funcoes\"\r\n\r\nimport 'highlight.js/styles/dark.css'\r\n\r\nfunction sTipo(valor){\r\n  if(valor === \"POST\"){\r\n    return \"POST - Cadastro\"\r\n  }else if(valor === \"PUT\"){\r\n    return \"PUT - Edição\"\r\n  }else if(valor === \"DELETE\"){\r\n    return \"DELETE - Deleção\"\r\n  }else {\r\n    return valor;\r\n  }\r\n}\r\n\r\n// ** Table ReOrder Column\r\nexport const coluns = [\r\n  {\r\n    name: \"ID\",\r\n    reorder: true,\r\n    sortable: true,\r\n    maxWidth: \"100px\",\r\n    selector: (row) => row.id,\r\n  },\r\n  {\r\n    name: \"Usuário\",\r\n    reorder: true,\r\n    sortable: true,\r\n    minWidth: \"310px\",\r\n    selector: (row) => row.Usuario.first_name,\r\n  },\r\n  {\r\n    name: \"Ação\",\r\n    reorder: true,\r\n    sortable: true,\r\n    minWidth: \"310px\",\r\n    selector: (row) => sTipo(row.tipo),\r\n  },\r\n  {\r\n    name: \"Módulo\",\r\n    reorder: true,\r\n    sortable: true,\r\n    minWidth: \"200px\",\r\n    selector: (row) => row.descricao,\r\n  },\r\n  {\r\n    name: \"Data\",\r\n    reorder: true,\r\n    sortable: true,\r\n    minWidth: \"200px\",\r\n    selector: (row) => { return dataPTBR(row.data) },\r\n  },\r\n];\r\n\r\n// ** Expandable table component\r\nconst ExpandableTable = ({ data }) => {\r\n  return (\r\n    <div className=\"expandable-content p-2\">\r\n      <p>\r\n        <span className=\"fw-bold\">Nome:</span> {data.Usuario.first_name}\r\n      </p>\r\n      <p>\r\n        <span className=\"fw-bold\">E-mail:</span> {data.Usuario.email}\r\n      </p>\r\n      <p>\r\n        <span className=\"fw-bold\">Módulo da ação:</span> {data.descricao}\r\n      </p>\r\n      <p>\r\n        <span className=\"fw-bold\">Data:</span> {dataPTBR(data.data)}\r\n      </p>\r\n      <p className=\"m-0\">\r\n        <span className=\"fw-bold\">Data:</span>\r\n      </p>\r\n      <div>\r\n        <Highlight className=\"bg-dark language-name-of-snippet\" language=\"json\">{data.objeto}</Highlight>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpandableTable;\r\n","// ** React Imports\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\n// ** Table Columns\r\nimport ExpandableTable, { getDados, coluns } from \"./data\";\r\n\r\n// ** Third Party Components\r\nimport ReactPaginate from \"react-paginate\";\r\nimport { ChevronDown } from \"react-feather\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardTitle, Button } from \"reactstrap\";\r\n\r\nimport { httpRequest } from \"../../../services/Api\";\r\nimport { getToken } from \"../../../services/Auth\";\r\n\r\nconst DataTablesReOrder = () => {\r\n  let navigate = useNavigate();\r\n  const [dados, setDados] = useState([]);\r\n  // ** States\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n\r\n  useEffect(() => {\r\n    httpRequest(`logs`, {\r\n      method: \"GET\",\r\n      token: getToken(),\r\n    }).then(res => {\r\n      setDados(res.body);\r\n    });\r\n  }, []);\r\n\r\n  // ** Function to handle Pagination\r\n  const handlePagination = (page) => {\r\n    setCurrentPage(page.selected);\r\n  };\r\n\r\n  // ** Custom Pagination\r\n  const CustomPagination = () => (\r\n    <ReactPaginate\r\n      nextLabel=\"\"\r\n      breakLabel=\"...\"\r\n      previousLabel=\"\"\r\n      pageRangeDisplayed={2}\r\n      forcePage={currentPage}\r\n      marginPagesDisplayed={2}\r\n      activeClassName=\"active\"\r\n      pageClassName=\"page-item\"\r\n      breakClassName=\"page-item\"\r\n      nextLinkClassName=\"page-link\"\r\n      pageLinkClassName=\"page-link\"\r\n      breakLinkClassName=\"page-link\"\r\n      previousLinkClassName=\"page-link\"\r\n      nextClassName=\"page-item next-item\"\r\n      previousClassName=\"page-item prev-item\"\r\n      pageCount={Math.ceil(dados.length / 10) || 1}\r\n      onPageChange={(page) => handlePagination(page)}\r\n      containerClassName=\"pagination react-paginate separated-pagination pagination-sm justify-content-end pe-1 mt-1\"\r\n    />\r\n  );\r\n\r\n  return (\r\n    <Card className=\"overflow-hidden\">\r\n      <CardHeader>\r\n        <div className=\"d-flex justify-content-between w-100\">\r\n          <CardTitle tag=\"h4\">Logs</CardTitle>\r\n        </div>\r\n      </CardHeader>\r\n      <div className=\"react-dataTable\">\r\n        <DataTable\r\n          noHeader\r\n          pagination\r\n          data={dados}\r\n          expandableRows\r\n          columns={coluns}\r\n          expandOnRowClicked\r\n          className='react-dataTable'\r\n          sortIcon={<ChevronDown size={10} />}\r\n          //paginationComponent={CustomPagination}\r\n          paginationDefaultPage={currentPage + 1}\r\n          expandableRowsComponent={ExpandableTable}\r\n          paginationRowsPerPageOptions={[50, 100]}\r\n          paginationPerPage={50}\r\n        />\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default DataTablesReOrder;\r\n","import React, { Fragment }  from \"react\";\r\n\r\n// ** Custom Components\r\nimport Breadcrumbs from '@components/breadcrumbs'\r\n\r\n// ** Third Party Components\r\nimport { Row, Col } from 'reactstrap'\r\n\r\n// ** Demo Components\r\nimport DataTablesReOrder from './tabela'\r\n\r\n// ** Styles\r\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\r\n\r\n//components\r\nimport isAzure from '../../../components/isAzure'\r\n\r\nconst ClientesLista = () => {\r\n\r\n  isAzure();\r\n\r\n  return (\r\n    <Fragment>\r\n      <Breadcrumbs title='Logs' data={[{ title: 'Logs' }, { title: 'Todos os logs' }]} />\r\n      <Row>\r\n        <Col sm='12'>\r\n          <DataTablesReOrder />\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default ClientesLista\r\n"],"sourceRoot":""}