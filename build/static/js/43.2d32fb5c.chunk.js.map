{"version":3,"sources":["views/logs/lista/data.js","views/logs/lista/tabela.js","views/logs/lista/index.js","components/isAzure/index.jsx","@core/components/breadcrumbs/index.js","services/Funcoes.jsx","services/Filtros.jsx"],"names":["coluns","name","reorder","sortable","maxWidth","selector","row","id","minWidth","Usuario","first_name","valor","tipo","descricao","dataPTBR","data","ExpandableTable","_ref","_jsxs","className","children","_jsx","email","Highlight","language","objeto","DataTablesReOrder","useNavigate","_useState","useState","_useState2","_slicedToArray","dados","setDados","_useState3","_useState4","setDataForm","_useState5","_useState6","currentPage","defaultValues","search","getLogsFIltro","useEffect","buscaFiltro","then","res","httpRequest","method","token","getToken","body","_useForm","useForm","control","reset","handleSubmit","setError","getInputProps","setValue","register","formState","errors","_x","_buscaFiltro","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","busca","retorno","wrap","_context","prev","next","concat","console","log","sent","abrupt","stop","Card","CardHeader","CardTitle","tag","CardBody","Form","onSubmit","setLogsFIltro","Row","Col","xl","md","sm","Label","for","Controller","render","field","Input","_objectSpread","placeholder","Button","type","color","DataTable","noHeader","pagination","expandableRows","columns","expandOnRowClicked","sortIcon","ChevronDown","size","paginationDefaultPage","expandableRowsComponent","paginationRowsPerPageOptions","paginationPerPage","ClientesLista","isAzure","Fragment","Breadcrumbs","title","jwt","require","navigate","isAuthenticated","useIsAuthenticated","verify","BreadCrumbs","props","Breadcrumb","BreadcrumbItem","Link","to","map","item","index","Wrapper","link","isLastItem","length","active","classnames","formataCPF","cpf","replace","formataCNPJ","cnpj","limpaValores","match","join","Date","toLocaleString","year","month","day","converterData","partes","split","converterDataAnoMes","DOC_KEY","setDocFIltro","localStorage","setItem","JSON","stringify","getDocFIltro","parse","getItem","ENVIO_KEY","setEnvioFIltro","getEnvioFIltro","LOGS_KEY"],"mappings":"oQAoBO,IAAMA,EAAS,CACpB,CACEC,KAAM,KACNC,SAAS,EACTC,UAAU,EACVC,SAAU,QACVC,SAAU,SAACC,GAAG,OAAKA,EAAIC,EAAE,GAE3B,CACEN,KAAM,aACNC,SAAS,EACTC,UAAU,EACVK,SAAU,QACVH,SAAU,SAACC,GAAG,OAAMA,EAAIG,SAAWH,EAAIG,QAAQC,WAAcJ,EAAIG,QAAQC,WAAa,EAAE,GAE1F,CACET,KAAM,aACNC,SAAS,EACTC,UAAU,EACVK,SAAU,QACVH,SAAU,SAACC,GAAG,MAhCH,UADAK,EAiCcL,EAAIM,MA/BtB,kBACU,QAAVD,EACA,qBACU,WAAVA,EACA,yBAEAA,EARX,IAAeA,CAiCuB,GAEpC,CACEV,KAAM,YACNC,SAAS,EACTC,UAAU,EACVK,SAAU,QACVH,SAAU,SAACC,GAAG,OAAKA,EAAIO,SAAS,GAElC,CACEZ,KAAM,OACNC,SAAS,EACTC,UAAU,EACVK,SAAU,QACVH,SAAU,SAACC,GAAU,OAAOQ,YAASR,EAAIS,KAAM,IA8BpCC,EAzBS,SAAHC,GAAkB,IAAZF,EAAIE,EAAJF,KACzB,OACEG,eAAA,OAAKC,UAAU,yBAAwBC,SAAA,CACrCF,eAAA,KAAAE,SAAA,CACEC,cAAA,QAAMF,UAAU,UAASC,SAAC,UAAY,IAAEL,EAAKN,QAAQC,cAEvDQ,eAAA,KAAAE,SAAA,CACEC,cAAA,QAAMF,UAAU,UAASC,SAAC,YAAc,IAAEL,EAAKN,QAAQa,SAEzDJ,eAAA,KAAAE,SAAA,CACEC,cAAA,QAAMF,UAAU,UAASC,SAAC,6BAAsB,IAAEL,EAAKF,aAEzDK,eAAA,KAAAE,SAAA,CACEC,cAAA,QAAMF,UAAU,UAASC,SAAC,UAAY,IAAEN,YAASC,EAAKA,SAExDM,cAAA,KAAGF,UAAU,MAAKC,SAChBC,cAAA,QAAMF,UAAU,UAASC,SAAC,YAE5BC,cAAA,OAAAD,SACEC,cAACE,IAAS,CAACJ,UAAU,mCAAmCK,SAAS,OAAMJ,SAAEL,EAAKU,aAItF,E,gFC0GeC,EAzJW,WACTC,cAAf,IACAC,EAA0BC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,EAAgCL,mBAAS,MAAKM,EAAAJ,YAAAG,EAAA,GAA7BE,GAAFD,EAAA,GAAaA,EAAA,IAE5BE,EAAsCR,mBAAS,GAAES,EAAAP,YAAAM,EAAA,GAA1CE,EAAWD,EAAA,GAGdE,GAH8BF,EAAA,GAGd,CAClBG,OAAQ,KAGNC,eACFF,EAAgBE,cAChBC,qBAAU,WACRC,EAAYF,eAAiBG,MAAK,SAACC,GACjCb,EAASa,EACX,GACF,GAAG,KAEHH,qBAAU,WACRI,YAAY,OAAQ,CAClBC,OAAQ,MACRC,MAAOC,gBACNL,MAAK,SAACC,GACPb,EAASa,EAAIK,KACf,GACF,GAAG,IAKL,IAIAC,EASIC,YAAQ,CAAEb,kBAPZc,GADKF,EAALG,MACOH,EAAPE,SAGAE,GAFQJ,EAARK,SACaL,EAAbM,cACYN,EAAZI,cACQJ,EAARO,SACQP,EAARQ,SACmBR,EAAnBS,UAAaC,OASb,SACalB,EAAWmB,GAAA,OAAAC,EAAAC,MAAC,KAADC,UAAA,CAW1B,SAAAF,IAFC,OAEDA,EAAAG,YAAAC,cAAAC,MAXA,SAAAC,EAA2BvD,GAAI,IAAAwD,EAAAC,EAAA,OAAAJ,cAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEV,OADfL,EAAK,WAAAM,OAAc9D,EAAK0B,QAC5BqC,QAAQC,IAAIR,GAAOG,EAAAE,KAAA,EACC7B,YAAY,OAAD8B,OAAQN,GAAS,CAC9CvB,OAAQ,MACRC,MAAOC,gBACN,KAAD,EACmB,OAJjBsB,EAAOE,EAAAM,KAIXF,QAAQC,IAAIP,GAASE,EAAAO,OAAA,SACdT,EAAQrB,MAAI,wBAAAuB,EAAAQ,OAAA,GAAAZ,EAAA,MACpBL,MAAA,KAAAC,UAAA,CA0BD,OACEhD,eAACiE,IAAI,CAAChE,UAAU,kBAAiBC,SAAA,CAC/BC,cAAC+D,IAAU,CAAAhE,SACTC,cAAA,OAAKF,UAAU,uCAAsCC,SACnDC,cAACgE,IAAS,CAACC,IAAI,KAAIlE,SAAC,aAGxBC,cAACkE,IAAQ,CAAAnE,SACPF,eAACsE,IAAI,CAACC,SAAUjC,GAlDL,SAACzC,GAChBqB,EAAYrB,GACZ2E,YAAc3E,GACd6B,EAAY7B,GAAM8B,MAAK,SAACC,GACtBb,EAASa,EACX,GACF,IA4C6C1B,SAAA,CACrCC,cAACsE,IAAG,CAAAvE,SACFF,eAAC0E,IAAG,CAACzE,UAAS,OAAU0E,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAAI3E,SAAA,CAC3CC,cAAC2E,IAAK,CAAC7E,UAAU,aAAa8E,IAAI,WAAU7E,SAAC,iCAG7CC,cAAC6E,IAAU,CACT5C,QAASA,EACT/C,GAAG,SACHN,KAAK,SACLkG,OAAQ,SAAAlF,GAAA,IAAGmF,EAAKnF,EAALmF,MAAK,OACd/E,cAACgF,IAAKC,YAAA,CACJC,YAAY,gBACZpF,UAAU,gBACNiF,GACJ,SAKV/E,cAAA,OAAKF,UAAU,QAAOC,SACpBC,cAAA,OAAKF,UAAU,mCAAkCC,SAC/CC,cAAA,OAAKF,UAAU,WAAUC,SACvBC,cAAA,OAAKF,UAAU,MAAKC,SAClBC,cAAA,OAAKF,UAAU,WAAUC,SACvBC,cAACmF,IAAM,CAACC,KAAK,SAASC,MAAM,kBAAiBtF,SAAC,2BAU5DC,cAAA,OAAKF,UAAU,kBAAiBC,SAC9BC,cAACsF,IAAS,CACRC,UAAQ,EACRC,YAAU,EACV9F,KAAMiB,EACN8E,gBAAc,EACdC,QAAS/G,EACTgH,oBAAkB,EAClB7F,UAAU,kBACV8F,SAAU5F,cAAC6F,IAAW,CAACC,KAAM,KAE7BC,sBAAuB7E,EAAc,EACrC8E,wBAAyBrG,EACzBsG,6BAA8B,CAAC,GAAI,KACnCC,kBAAmB,SAK7B,E,kBCzJeC,UAhBO,WAIpB,OAFAC,cAGEvG,eAACwG,WAAQ,CAAAtG,SAAA,CACPC,cAACsG,IAAW,CAACC,MAAM,OAAO7G,KAAM,CAAC,CAAE6G,MAAO,QAAU,CAAEA,MAAO,oBAC7DvG,cAACsE,IAAG,CAAAvE,SACFC,cAACuE,IAAG,CAACG,GAAG,KAAI3E,SACVC,cAACK,EAAiB,UAK5B,C,mCC/BA,mCAGMmG,EAAMC,EAAQ,KAoBLL,IAhBC,WACd,IAAIM,EAAWpG,cACTqG,EAAkBC,cAExBtF,qBAAU,WACHqF,EAGaH,EAAIK,OAAOhF,cAAY,6VAErC6E,EAAS,UAJXA,EAAS,SAOb,GAAG,CAACC,GACN,C,+FCwCeG,IA/CK,SAACC,GAEnB,IAAQrH,EAAgBqH,EAAhBrH,KAAM6G,EAAUQ,EAAVR,MAqBd,OACEvG,cAAA,OAAKF,UAAU,qBAAoBC,SACjCC,cAAA,OAAKF,UAAU,2CAA0CC,SACvDC,cAAA,OAAKF,UAAU,sBAAqBC,SAClCF,eAAA,OAAKC,UAAU,SAAQC,SAAA,CACpBwG,EACCvG,cAAA,MAAIF,UAAU,wCAAuCC,SAAEwG,IAEvD,GAEFvG,cAAA,OAAKF,UAAU,6DAA4DC,SACzEF,eAACmH,IAAU,CAAAjH,SAAA,CACTC,cAACiH,IAAc,CAAChD,IAAI,KAAIlE,SACtBC,cAACkH,IAAI,CAACC,GAAG,IAAGpH,SAAC,WA/BpBL,EAAK0H,KAAI,SAACC,EAAMC,GACrB,IAAMC,EAAUF,EAAKG,KAAON,IAAOb,WAC7BoB,EAAa/H,EAAKgI,OAAS,IAAMJ,EACvC,OACEtH,cAACiH,IAAc,CACbhD,IAAI,KAEJ0D,QAASF,EACT3H,UAAW8H,IAAW,CAAE,gBAAiBH,IAAc1H,SAEvDC,cAACuH,EAAOtC,wBAAA,GAAMoC,EAAKG,KAAO,CAAEL,GAAIE,EAAKG,MAAS,CAAC,GAAC,IAAAzH,SAC7CsH,EAAKd,UALHe,EASX,iBA0BJ,C,mCC5DO,SAASO,EAAWC,GAKvB,OAHAA,EAAMA,EAAIC,QAAQ,SAAU,KAGjBA,QAAQ,+BAAgC,cACrD,CAGO,SAASC,EAAYC,GAK1B,OAHAA,EAAOA,EAAKF,QAAQ,SAAU,KAGlBA,QAAQ,sCAAuC,iBAC7D,CAEO,SAASG,EAAa5I,GAC3B,OAAOA,EAAM6I,MAAM,OAAOC,KAAK,GACjC,CAEO,SAAS3I,EAASH,GAMvB,OALW,IAAI+I,KAAK/I,GAAOgJ,eAAe,QAAS,CACjDC,KAAM,UACNC,MAAO,UACPC,IAAK,WAGT,CAEO,SAASC,EAAchJ,GAC5B,IAAMiJ,EAASjJ,EAAKkJ,MAAM,KAE1B,MADyB,CAACD,EAAO,GAAIA,EAAO,GAAIA,EAAO,IAC/BP,KAAK,IAC/B,CAEO,SAASS,EAAoBnJ,GAClC,IAAMiJ,EAASjJ,EAAKkJ,MAAM,KAE1B,MADyB,CAACD,EAAO,GAAIA,EAAO,IACpBP,KAAK,IAC/B,CAxCF,2M,yDCAA,4MAAO,IAAMU,EAAU,8BAEVC,EAAe,SAACpI,GAAK,OAAKqI,aAAaC,QAAQH,EAASI,KAAKC,UAAUxI,GAAQ,EAErF,SAASyI,IACd,OAAOF,KAAKG,MAAML,aAAaM,QAAQR,GACzC,CAEO,IAAMS,EAAY,0BAEZC,EAAiB,SAAC7I,GAAK,OAAKqI,aAAaC,QAAQM,EAAWL,KAAKC,UAAUxI,GAAQ,EAEzF,SAAS8I,IACd,OAAOP,KAAKG,MAAML,aAAaM,QAAQC,GACzC,CAEO,IAAMG,EAAW,wBAEXrF,EAAgB,SAAC1D,GAAK,OAAKqI,aAAaC,QAAQS,EAAUR,KAAKC,UAAUxI,GAAQ,EAEvF,SAASU,IACd,OAAO6H,KAAKG,MAAML,aAAaM,QAAQI,GACzC,C","file":"static/js/43.2d32fb5c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Highlight from \"react-highlight\";\r\n\r\nimport { dataPTBR } from \"../../../services/Funcoes\"\r\n\r\nimport 'highlight.js/styles/dark.css'\r\n\r\nfunction sTipo(valor){\r\n  if(valor === \"POST\"){\r\n    return \"POST - Cadastro\"\r\n  }else if(valor === \"PUT\"){\r\n    return \"PUT - Edição\"\r\n  }else if(valor === \"DELETE\"){\r\n    return \"DELETE - Deleção\"\r\n  }else {\r\n    return valor;\r\n  }\r\n}\r\n\r\n// ** Table ReOrder Column\r\nexport const coluns = [\r\n  {\r\n    name: \"ID\",\r\n    reorder: true,\r\n    sortable: true,\r\n    maxWidth: \"100px\",\r\n    selector: (row) => row.id,\r\n  },\r\n  {\r\n    name: \"Usuário\",\r\n    reorder: true,\r\n    sortable: true,\r\n    minWidth: \"310px\",\r\n    selector: (row) => (row.Usuario && row.Usuario.first_name) ? row.Usuario.first_name : \"\",\r\n  },\r\n  {\r\n    name: \"Ação\",\r\n    reorder: true,\r\n    sortable: true,\r\n    minWidth: \"310px\",\r\n    selector: (row) => sTipo(row.tipo),\r\n  },\r\n  {\r\n    name: \"Módulo\",\r\n    reorder: true,\r\n    sortable: true,\r\n    minWidth: \"200px\",\r\n    selector: (row) => row.descricao,\r\n  },\r\n  {\r\n    name: \"Data\",\r\n    reorder: true,\r\n    sortable: true,\r\n    minWidth: \"200px\",\r\n    selector: (row) => { return dataPTBR(row.data) },\r\n  },\r\n];\r\n\r\n// ** Expandable table component\r\nconst ExpandableTable = ({ data }) => {\r\n  return (\r\n    <div className=\"expandable-content p-2\">\r\n      <p>\r\n        <span className=\"fw-bold\">Nome:</span> {data.Usuario.first_name}\r\n      </p>\r\n      <p>\r\n        <span className=\"fw-bold\">E-mail:</span> {data.Usuario.email}\r\n      </p>\r\n      <p>\r\n        <span className=\"fw-bold\">Módulo da ação:</span> {data.descricao}\r\n      </p>\r\n      <p>\r\n        <span className=\"fw-bold\">Data:</span> {dataPTBR(data.data)}\r\n      </p>\r\n      <p className=\"m-0\">\r\n        <span className=\"fw-bold\">Data:</span>\r\n      </p>\r\n      <div>\r\n        <Highlight className=\"bg-dark language-name-of-snippet\" language=\"json\">{data.objeto}</Highlight>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpandableTable;\r\n","// ** React Imports\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\n// ** Table Columns\r\nimport ExpandableTable, { getDados, coluns } from \"./data\";\r\n\r\n// ** Third Party Components\r\nimport ReactPaginate from \"react-paginate\";\r\nimport { ChevronDown } from \"react-feather\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport {\r\n  getLogsFIltro,\r\n  isLogsFIltro,\r\n  setLogsFIltro,\r\n} from \"../../../services/Filtros\";\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  CardHeader,\r\n  Card,\r\n  CardTitle,\r\n  CardBody,\r\n  Form,\r\n  Label,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Button,\r\n} from \"reactstrap\";\r\n\r\nimport { httpRequest } from \"../../../services/Api\";\r\nimport { getToken } from \"../../../services/Auth\";\r\n\r\nconst DataTablesReOrder = () => {\r\n  let navigate = useNavigate();\r\n  const [dados, setDados] = useState([]);\r\n  const [dataForm, setDataForm] = useState(null);\r\n  // ** States\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n\r\n\r\n  let defaultValues = {\r\n    search: \"\",\r\n  };\r\n\r\n  if (getLogsFIltro()) {\r\n    defaultValues = getLogsFIltro();\r\n    useEffect(() => {\r\n      buscaFiltro(getLogsFIltro()).then((res) => {\r\n        setDados(res);\r\n      });\r\n    }, []);\r\n  } else {\r\n    useEffect(() => {\r\n      httpRequest(`logs`, {\r\n        method: \"GET\",\r\n        token: getToken(),\r\n      }).then((res) => {\r\n        setDados(res.body);\r\n      });\r\n    }, []);\r\n  }\r\n\r\n\r\n  // ** Function to handle Pagination\r\n  const handlePagination = (page) => {\r\n    setCurrentPage(page.selected);\r\n  };\r\n\r\n  const {\r\n    reset,\r\n    control,\r\n    setError,\r\n    getInputProps,\r\n    handleSubmit,\r\n    setValue,\r\n    register,\r\n    formState: { errors },\r\n  } = useForm({ defaultValues });\r\n\r\n  const onSubmit = (data) => {\r\n    setDataForm(data);\r\n    setLogsFIltro(data);\r\n    buscaFiltro(data).then((res) => {\r\n      setDados(res);\r\n    });\r\n  };\r\n  async function buscaFiltro(data) {\r\n    let busca = `?search=${data.search}`;\r\n    console.log(busca);\r\n    let retorno = await httpRequest(`logs${busca}`, {\r\n      method: \"GET\",\r\n      token: getToken(),\r\n    });\r\n    console.log(retorno);\r\n    return retorno.body;\r\n  }\r\n\r\n  // ** Custom Pagination\r\n  const CustomPagination = () => (\r\n    <ReactPaginate\r\n      nextLabel=\"\"\r\n      breakLabel=\"...\"\r\n      previousLabel=\"\"\r\n      pageRangeDisplayed={2}\r\n      forcePage={currentPage}\r\n      marginPagesDisplayed={2}\r\n      activeClassName=\"active\"\r\n      pageClassName=\"page-item\"\r\n      breakClassName=\"page-item\"\r\n      nextLinkClassName=\"page-link\"\r\n      pageLinkClassName=\"page-link\"\r\n      breakLinkClassName=\"page-link\"\r\n      previousLinkClassName=\"page-link\"\r\n      nextClassName=\"page-item next-item\"\r\n      previousClassName=\"page-item prev-item\"\r\n      pageCount={Math.ceil(dados.length / 10) || 1}\r\n      onPageChange={(page) => handlePagination(page)}\r\n      containerClassName=\"pagination react-paginate separated-pagination pagination-sm justify-content-end pe-1 mt-1\"\r\n    />\r\n  );\r\n\r\n  return (\r\n    <Card className=\"overflow-hidden\">\r\n      <CardHeader>\r\n        <div className=\"d-flex justify-content-between w-100\">\r\n          <CardTitle tag=\"h4\">Logs</CardTitle>\r\n        </div>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <Form onSubmit={handleSubmit(onSubmit)}>\r\n          <Row>\r\n            <Col className={`mb-1`} xl=\"3\" md=\"6\" sm=\"12\">\r\n              <Label className=\"form-label\" for=\"envio_id\">\r\n                Buscar por palçavra chave\r\n              </Label>\r\n              <Controller\r\n                control={control}\r\n                id=\"search\"\r\n                name=\"search\"\r\n                render={({ field }) => (\r\n                  <Input\r\n                    placeholder=\"Palavra chave\"\r\n                    className=\"form-control\"\r\n                    {...field}\r\n                  />\r\n                )}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <div className=\"w-100\">\r\n            <div className=\"row d-flex justify-content-start\">\r\n              <div className=\"col-lg-6\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-lg-6\">\r\n                    <Button type=\"submit\" color=\"outline-primary\">\r\n                      Filtrar\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Form>\r\n      </CardBody>\r\n      <div className=\"react-dataTable\">\r\n        <DataTable\r\n          noHeader\r\n          pagination\r\n          data={dados}\r\n          expandableRows\r\n          columns={coluns}\r\n          expandOnRowClicked\r\n          className=\"react-dataTable\"\r\n          sortIcon={<ChevronDown size={10} />}\r\n          //paginationComponent={CustomPagination}\r\n          paginationDefaultPage={currentPage + 1}\r\n          expandableRowsComponent={ExpandableTable}\r\n          paginationRowsPerPageOptions={[50, 100]}\r\n          paginationPerPage={50}\r\n        />\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default DataTablesReOrder;\r\n","import React, { Fragment }  from \"react\";\r\n\r\n// ** Custom Components\r\nimport Breadcrumbs from '@components/breadcrumbs'\r\n\r\n// ** Third Party Components\r\nimport { Row, Col } from 'reactstrap'\r\n\r\n// ** Demo Components\r\nimport DataTablesReOrder from './tabela'\r\n\r\n// ** Styles\r\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\r\n\r\n//components\r\nimport isAzure from '../../../components/isAzure'\r\n\r\nconst ClientesLista = () => {\r\n\r\n  isAzure();\r\n\r\n  return (\r\n    <Fragment>\r\n      <Breadcrumbs title='Logs' data={[{ title: 'Logs' }, { title: 'Todos os logs' }]} />\r\n      <Row>\r\n        <Col sm='12'>\r\n          <DataTablesReOrder />\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default ClientesLista\r\n","import { useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useIsAuthenticated } from \"@azure/msal-react\";\r\nconst jwt = require(\"jsonwebtoken\");\r\n\r\nimport { getToken } from \"../../services/Auth\";\r\n\r\nconst isAzure = () => {\r\n  let navigate = useNavigate();\r\n  const isAuthenticated = useIsAuthenticated();\r\n\r\n  useEffect(() => {\r\n    if (!isAuthenticated) {\r\n      navigate(\"/login\");\r\n    }else{\r\n      const payload = jwt.verify(getToken(), \"aIebX2X9oCZE1gCNFlE0lSxPAKVqJfL7+8WUcMVcz677+V6JnRomzKfg03EIR6VlSAf2kWQSiiTDP8MF3Js7is9i7+YdCPTw+sifbuNeeCZWLr1QJCrGaRacvD4qKzzpXNkNeKhDv0h6rQW/JJ8dX94rK5esVxtbupCptX8HzfL8rmUSLI/l78ddYfkb+RkuHH5PY8TYpdUBv1h3qUYo4L62QUX/Ze5wqhYUuhPvmOAYIoz7j4SABxT2JciOn9Wy1wraZ268VzhgLilykQBH5QC6lbNyfIegB79R0QYQrYk5IL1gfmxY2lKIDeCYB9p8NIF8qfCyD/RJMQOUEv9z9A==\");\r\n      if(!payload) {\r\n        navigate(\"/login\");\r\n      }\r\n    }\r\n  }, [isAuthenticated]);\r\n}\r\n\r\nexport default isAzure;","// ** React Imports\r\nimport { Fragment } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\n// ** Third Party Components\r\nimport Proptypes from \"prop-types\"\r\nimport classnames from \"classnames\"\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem\r\n} from \"reactstrap\"\r\n\r\nconst BreadCrumbs = (props) => {\r\n  // ** Props\r\n  const { data, title } = props\r\n\r\n  const renderBreadCrumbs = () => {\r\n    return data.map((item, index) => {\r\n      const Wrapper = item.link ? Link : Fragment\r\n      const isLastItem = data.length - 1 === index\r\n      return (\r\n        <BreadcrumbItem\r\n          tag=\"li\"\r\n          key={index}\r\n          active={!isLastItem}\r\n          className={classnames({ \"text-primary\": !isLastItem })}\r\n        >\r\n          <Wrapper {...(item.link ? { to: item.link } : {})}>\r\n            {item.title}\r\n          </Wrapper>\r\n        </BreadcrumbItem>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"content-header row\">\r\n      <div className=\"content-header-left col-md-9 col-12 mb-2\">\r\n        <div className=\"row breadcrumbs-top\">\r\n          <div className=\"col-12\">\r\n            {title ? (\r\n              <h2 className=\"content-header-title float-start mb-0\">{title}</h2>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            <div className=\"breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12\">\r\n              <Breadcrumb>\r\n                <BreadcrumbItem tag=\"li\">\r\n                  <Link to=\"/\">Home</Link>\r\n                </BreadcrumbItem>\r\n                {renderBreadCrumbs()}\r\n              </Breadcrumb>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default BreadCrumbs\r\n\r\n// ** PropTypes\r\nBreadCrumbs.propTypes = {\r\n  title: Proptypes.string.isRequired,\r\n  data: Proptypes.arrayOf(\r\n    Proptypes.shape({\r\n      link: Proptypes.string,\r\n      title: Proptypes.string.isRequired\r\n    })\r\n  )\r\n}\r\n","export function formataCPF(cpf) {\r\n    //retira os caracteres indesejados...\r\n    cpf = cpf.replace(/[^\\d]/g, \"\");\r\n  \r\n    //realizar a formatação...\r\n    return cpf.replace(/(\\d{3})(\\d{3})(\\d{3})(\\d{2})/, \"$1.$2.$3-$4\");\r\n  }\r\n\r\n  \r\n  export function formataCNPJ(cnpj) {\r\n    //retira os caracteres indesejados...\r\n    cnpj = cnpj.replace(/[^\\d]/g, \"\");\r\n  \r\n    //realizar a formatação...\r\n    return cnpj.replace(/(\\d{2})(\\d{3})(\\d{3})(\\d{4})(\\d{2})/, \"$1.$2.$3/$4-$5\");\r\n  }\r\n\r\n  export function limpaValores(valor) {\r\n    return valor.match(/\\d/g).join(\"\");\r\n  }\r\n  \r\n  export function dataPTBR(valor) {\r\n    let date = new Date(valor).toLocaleString(\"pt-BR\", {\r\n      year: \"numeric\",\r\n      month: \"numeric\",\r\n      day: \"numeric\",\r\n    });\r\n    return date;\r\n  }\r\n\r\n  export function converterData(data) {\r\n    const partes = data.split('/');\r\n    const dataReorganizada = [partes[2], partes[1], partes[0]];\r\n    return dataReorganizada.join('-');\r\n  }\r\n\r\n  export function converterDataAnoMes(data) {\r\n    const partes = data.split('/');\r\n    const dataReorganizada = [partes[1], partes[0]];\r\n    return dataReorganizada.join('-');\r\n  }","export const DOC_KEY = \"@bioseta-filtros-documentos\";\r\nexport const isDocFIltro = () => localStorage.getItem(DOC_KEY) !== null;\r\nexport const setDocFIltro = (dados) => localStorage.setItem(DOC_KEY, JSON.stringify(dados));\r\n\r\nexport function getDocFIltro() {\r\n  return JSON.parse(localStorage.getItem(DOC_KEY));\r\n}\r\n\r\nexport const ENVIO_KEY = \"@bioseta-filtros-envios\";\r\nexport const isEnvioFIltro = () => localStorage.getItem(ENVIO_KEY) !== null;\r\nexport const setEnvioFIltro = (dados) => localStorage.setItem(ENVIO_KEY, JSON.stringify(dados));\r\n\r\nexport function getEnvioFIltro() {\r\n  return JSON.parse(localStorage.getItem(ENVIO_KEY));\r\n}\r\n\r\nexport const LOGS_KEY = \"@bioseta-filtros-logs\";\r\nexport const isLogsFIltro = () => localStorage.getItem(LOGS_KEY) !== null;\r\nexport const setLogsFIltro = (dados) => localStorage.setItem(LOGS_KEY, JSON.stringify(dados));\r\n\r\nexport function getLogsFIltro() {\r\n  return JSON.parse(localStorage.getItem(LOGS_KEY));\r\n}\r\n"],"sourceRoot":""}