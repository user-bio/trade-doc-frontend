{"version":3,"sources":["components/isAzure/index.jsx","@core/components/breadcrumbs/index.js","views/documentos/form/upload.jsx","views/documentos/leitor/index.jsx"],"names":["jwt","require","isAzure","navigate","useNavigate","isAuthenticated","useIsAuthenticated","useEffect","verify","getToken","BreadCrumbs","props","data","title","className","tag","to","map","item","index","Wrapper","link","Link","Fragment","isLastItem","length","active","classnames","Upload","useState","files","setFiles","ativo","setAtivo","useDropzone","multiple","accept","onDrop","acceptedFiles","rejectedFiles","toast","error","file","Object","assign","funcao","getRootProps","getInputProps","renderFilePreview","type","startsWith","alt","name","src","URL","createObjectURL","height","width","size","fileList","Math","round","toFixed","color","outline","onClick","filtered","filter","i","handleRemoveFile","class","href","e","preventDefault","withReactContent","Swal","LeitorForm","setData","dados","setDados","tabela","setResultado","useForm","defaultValues","documento","handleSubmit","reset","control","setError","setValue","register","formState","errors","limpaValores","valor","result","String","replace","sm","onSubmit","FormData","append","console","log","httpRequest","method","body","token","then","res","catch","xl","md","for","id","Texts","text","position","scope","R","T","x","y"],"mappings":"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","file":"static/js/35.59bf0194.chunk.js","sourcesContent":["import { useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useIsAuthenticated } from \"@azure/msal-react\";\r\nconst jwt = require(\"jsonwebtoken\");\r\n\r\nimport { getToken } from \"../../services/Auth\";\r\n\r\nconst isAzure = () => {\r\n  let navigate = useNavigate();\r\n  const isAuthenticated = useIsAuthenticated();\r\n\r\n  useEffect(() => {\r\n    if (!isAuthenticated) {\r\n      navigate(\"/login\");\r\n    }else{\r\n      const payload = jwt.verify(getToken(), \"aIebX2X9oCZE1gCNFlE0lSxPAKVqJfL7+8WUcMVcz677+V6JnRomzKfg03EIR6VlSAf2kWQSiiTDP8MF3Js7is9i7+YdCPTw+sifbuNeeCZWLr1QJCrGaRacvD4qKzzpXNkNeKhDv0h6rQW/JJ8dX94rK5esVxtbupCptX8HzfL8rmUSLI/l78ddYfkb+RkuHH5PY8TYpdUBv1h3qUYo4L62QUX/Ze5wqhYUuhPvmOAYIoz7j4SABxT2JciOn9Wy1wraZ268VzhgLilykQBH5QC6lbNyfIegB79R0QYQrYk5IL1gfmxY2lKIDeCYB9p8NIF8qfCyD/RJMQOUEv9z9A==\");\r\n      if(!payload) {\r\n        navigate(\"/login\");\r\n      }\r\n    }\r\n  }, [isAuthenticated]);\r\n}\r\n\r\nexport default isAzure;","// ** React Imports\r\nimport { Fragment } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\n// ** Third Party Components\r\nimport Proptypes from \"prop-types\"\r\nimport classnames from \"classnames\"\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem\r\n} from \"reactstrap\"\r\n\r\nconst BreadCrumbs = (props) => {\r\n  // ** Props\r\n  const { data, title } = props\r\n\r\n  const renderBreadCrumbs = () => {\r\n    return data.map((item, index) => {\r\n      const Wrapper = item.link ? Link : Fragment\r\n      const isLastItem = data.length - 1 === index\r\n      return (\r\n        <BreadcrumbItem\r\n          tag=\"li\"\r\n          key={index}\r\n          active={!isLastItem}\r\n          className={classnames({ \"text-primary\": !isLastItem })}\r\n        >\r\n          <Wrapper {...(item.link ? { to: item.link } : {})}>\r\n            {item.title}\r\n          </Wrapper>\r\n        </BreadcrumbItem>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"content-header row\">\r\n      <div className=\"content-header-left col-md-9 col-12 mb-2\">\r\n        <div className=\"row breadcrumbs-top\">\r\n          <div className=\"col-12\">\r\n            {title ? (\r\n              <h2 className=\"content-header-title float-start mb-0\">{title}</h2>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            <div className=\"breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12\">\r\n              <Breadcrumb>\r\n                <BreadcrumbItem tag=\"li\">\r\n                  <Link to=\"/\">Home</Link>\r\n                </BreadcrumbItem>\r\n                {renderBreadCrumbs()}\r\n              </Breadcrumb>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default BreadCrumbs\r\n\r\n// ** PropTypes\r\nBreadCrumbs.propTypes = {\r\n  title: Proptypes.string.isRequired,\r\n  data: Proptypes.arrayOf(\r\n    Proptypes.shape({\r\n      link: Proptypes.string,\r\n      title: Proptypes.string.isRequired\r\n    })\r\n  )\r\n}\r\n","// ** React Imports\r\nimport React, { useState, Fragment } from \"react\";\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardBody, Button, ListGroup, ListGroupItem } from \"reactstrap\";\r\n\r\n// ** Third Party Imports\r\nimport toast from \"react-hot-toast\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { FileText, X, DownloadCloud } from \"react-feather\";\r\n\r\nconst Upload = (props) => {\r\n  // ** State\r\n  const [files, setFiles] = useState([]);\r\n  const [ativo, setAtivo] = useState(false);\r\n\r\n  const { getRootProps, getInputProps } = useDropzone({\r\n    multiple: false,\r\n    accept: {\r\n      \"application/pdf\": [\".pdf\"],\r\n    },\r\n    onDrop: (acceptedFiles, rejectedFiles) => {\r\n      if (rejectedFiles.length) {\r\n        toast.error(\"Você só pode fazer upload de arquivos de PDF!\");\r\n      } else {\r\n        setFiles([\r\n          ...files,\r\n          ...acceptedFiles.map((file) => Object.assign(file)),\r\n        ]);\r\n        props.funcao(acceptedFiles)\r\n        setAtivo(true)\r\n      }\r\n    },\r\n  });\r\n\r\n  const renderFilePreview = (file) => {\r\n    if (file.type.startsWith(\"image\")) {\r\n      return (\r\n        <img\r\n          className=\"rounded\"\r\n          alt={file.name}\r\n          src={URL.createObjectURL(file)}\r\n          height=\"28\"\r\n          width=\"28\"\r\n        />\r\n      );\r\n    } else {\r\n      return <FileText size=\"28\" />;\r\n    }\r\n  };\r\n\r\n  const handleRemoveFile = (file) => {\r\n    const uploadedFiles = files;\r\n    const filtered = uploadedFiles.filter((i) => i.name !== file.name);\r\n    setFiles([...filtered]);\r\n\r\n    props.funcao([])\r\n    setAtivo(false)\r\n  };\r\n\r\n  const renderFileSize = (size) => {\r\n    if (Math.round(size / 100) / 10 > 1000) {\r\n      return `${(Math.round(size / 100) / 10000).toFixed(1)} mb`;\r\n    } else {\r\n      return `${(Math.round(size / 100) / 10).toFixed(1)} kb`;\r\n    }\r\n  };\r\n\r\n  const fileList = files.map((file, index) => (\r\n    <ListGroupItem\r\n      key={`${file.name}-${index}`}\r\n      className=\"d-flex align-items-center justify-content-between\"\r\n    >\r\n      <div className=\"file-details d-flex align-items-center\">\r\n        <div className=\"file-preview me-1\">{renderFilePreview(file)}</div>\r\n        <div>\r\n          <p className=\"file-name mb-0\">{file.name}</p>\r\n          <p className=\"file-size mb-0\">{renderFileSize(file.size)}</p>\r\n        </div>\r\n      </div>\r\n      <Button\r\n        color=\"danger\"\r\n        outline\r\n        size=\"sm\"\r\n        className=\"btn-icon\"\r\n        onClick={() => handleRemoveFile(file)}\r\n      >\r\n        <X size={14} />\r\n      </Button>\r\n    </ListGroupItem>\r\n  ));\r\n\r\n  const handleRemoveAllFiles = () => {\r\n    props.funcao([])\r\n    setFiles([]);\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <CardBody className={`p-0`}>\r\n        <div {...getRootProps()} className={`dropzone ${props.class} ${ ativo ? 'd-none' : '' }`}>\r\n          <input {...getInputProps()} />\r\n          <div className=\"d-flex align-items-center justify-content-center flex-column\">\r\n            <DownloadCloud size={64} />\r\n            <h5>Arraste seu arquivo ou clique em localizar</h5>\r\n            <p className=\"text-secondary\">\r\n              Arraste ou clique em{\" \"}\r\n              <a href=\"/\" onClick={(e) => e.preventDefault()}>\r\n                localizar\r\n              </a>{\" \"}\r\n              para selecionar em seu dispositivo\r\n            </p>\r\n          </div>\r\n        </div>\r\n        {files.length ? (\r\n          <Fragment>\r\n            <ListGroup className=\"my-2\">{fileList}</ListGroup>\r\n          </Fragment>\r\n        ) : null}\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Upload;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Form,\r\n  Label,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Button,\r\n} from \"reactstrap\";\r\n\r\n// ** Third Party Components\r\nimport Breadcrumbs from \"@components/breadcrumbs\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport classnames from \"classnames\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nconst MySwal = withReactContent(Swal);\r\nimport { useNavigate, useParams, useLocation } from \"react-router-dom\";\r\nimport Flatpickr from \"react-flatpickr\";\r\nimport { pt } from \"flatpickr/dist/l10n/pt\";\r\n\r\n// ** Custom Components\r\n\r\n// ** Styles\r\nimport \"@styles/react/libs/flatpickr/flatpickr.scss\";\r\nimport \"@styles/react/libs/file-uploader/file-uploader.scss\";\r\n\r\n//components\r\nimport isAzure from \"../../../components/isAzure\";\r\nimport { getToken } from \"../../../services/Auth\";\r\nimport { httpRequest } from \"../../../services/Api\";\r\n\r\nimport Upload from \"../form/upload\";\r\n\r\nconst LeitorForm = () => {\r\n  isAzure();\r\n\r\n  const defaultValues = {\r\n    documento: null,\r\n  };\r\n\r\n  const [data, setData] = useState(null);\r\n  const [dados, setDados] = useState(null);\r\n  const [tabela, setResultado] = useState([]);\r\n\r\n  const {\r\n    reset,\r\n    control,\r\n    setError,\r\n    getInputProps,\r\n    handleSubmit,\r\n    setValue,\r\n    register,\r\n    formState: { errors },\r\n  } = useForm({ defaultValues });\r\n\r\n  let navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (dados !== null) {\r\n      setValue(\"documento\", dados);\r\n    }\r\n  }, [dados]);\r\n\r\n  function limpaValores(valor) {\r\n    let result = String(valor);\r\n    result = result.replace(/%20/g, \" \");\r\n    result = result.replace(/%2F/g, \"/\");\r\n    result = result.replace(/%3A/g, \"\");\r\n    result = result.replace(/%2C/g, \",\");\r\n    result = result.replace(/%24/g, \"$\");\r\n    result = result.replace(/%C3%A7/g, \"ç\");\r\n    result = result.replace(/%C3%A9/g, \"é\");\r\n    result = result.replace(/%C3%AD/g, \"í\");\r\n    result = result.replace(/%C3%A1/g, \"á\");\r\n    result = result.replace(/%C3%B3/g, \"ó\");\r\n    result = result.replace(/%C3%BA/g, \"ú\");\r\n    result = result.replace(/%C3%A3/g, \"ã\");\r\n    result = result.replace(/%C3%83/g, \"Ã\");\r\n    result = result.replace(/%C3%B5/g, \"õ\");\r\n    result = result.replace(/%C2%BA/g, \"o\");\r\n    result = result.replace(/%C3%AA/g, \"ê\");\r\n\r\n    return result;\r\n  }\r\n\r\n  const onSubmit = (data) => {\r\n    setData(data);\r\n\r\n    let documentoTrue = false;\r\n    if (data.documento === null) {\r\n      documentoTrue = false;\r\n    } else {\r\n      documentoTrue = true;\r\n    }\r\n\r\n    if (documentoTrue === true) {\r\n      const dados = new FormData();\r\n      dados.append(\"file\", data.documento[0]);\r\n\r\n      console.log(\"chegamos aqui\");\r\n      httpRequest(`documentos/leitor`, {\r\n        method: \"POST\",\r\n        body: dados,\r\n        token: getToken(),\r\n      })\r\n        .then((res) => {\r\n          let result = res.body;\r\n          setResultado(result);\r\n          console.log(132323);\r\n          console.log(result);\r\n        })\r\n        .catch((error) => console.log(error));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Breadcrumbs title=\"Configurações\" data={[{ title: \"Leitor PDF\" }]} />\r\n      <Row>\r\n        <Col sm=\"12\">\r\n          <Card>\r\n            <CardBody>\r\n              <Form onSubmit={handleSubmit(onSubmit)}>\r\n                <Row>\r\n                  <Col className={`mb-1`} xl=\"12\" md=\"12\" sm=\"12\">\r\n                    <Label className=\"form-label\" for=\"documento\">\r\n                      Documento\r\n                    </Label>\r\n                    <Upload\r\n                      id=\"documento\"\r\n                      funcao={setDados}\r\n                      class={\r\n                        data !== null &&\r\n                        (data.documento === null || !data.documento.length)\r\n                          ? \"border-danger\"\r\n                          : \"\"\r\n                      }\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <div className=\" text-end w-100\">\r\n                  <Button type=\"submit\" color=\"primary\">\r\n                    Executar\r\n                  </Button>\r\n                </div>\r\n                <Row>\r\n                  <Col className={`mb-1`} xl=\"12\" md=\"12\" sm=\"12\">\r\n                    <div>\r\n                      {tabela.map((res, index) => (\r\n                        <div key={index}>\r\n                          <h3 className=\"mb-2 mt-2\">Página {index + 1}</h3>\r\n                          <div className=\"AjusteTabela\">\r\n                            <table className=\"table\">\r\n                              <thead>\r\n                                <tr>\r\n                                  <th width=\"15%\">#</th>\r\n                                  <th width=\"55%\">Texto</th>\r\n                                  <th width=\"15%\">X</th>\r\n                                  <th width=\"15%\">Y</th>\r\n                                </tr>\r\n                              </thead>\r\n                              <tbody>\r\n                                {res.Texts.map((text, position) => (\r\n                                  <tr key={position}>\r\n                                    <th scope=\"row\">{position + 1}</th>\r\n                                    <td>{limpaValores(text.R[0].T)}</td>\r\n                                    <td>{text.x}</td>\r\n                                    <td>{text.y}</td>\r\n                                  </tr>\r\n                                ))}\r\n                              </tbody>\r\n                            </table>\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default LeitorForm;\r\n"],"sourceRoot":""}