{"version":3,"sources":["components/isAzure/index.jsx","@core/components/breadcrumbs/index.js","views/usuarios/form/index.jsx"],"names":["jwt","require","isAzure","navigate","useNavigate","isAuthenticated","useIsAuthenticated","useEffect","verify","getToken","BreadCrumbs","props","data","title","className","tag","to","map","item","index","Wrapper","link","Link","Fragment","isLastItem","length","active","classnames","MySwal","withReactContent","Swal","UsuariosForm","defaultValues","useForm","reset","control","setError","handleSubmit","register","setValue","errors","formState","permissoesLista","id","nome","descricao","tipo","useParams","useState","dados","setDados","setData","selectedPdf","setSelectedPdf","selectedUpload","setSelectedUpload","selectedEnvio","setSelectedEnvio","selectedP","setSelectedP","setores","setSetores","permissoes","setPermissoes","httpRequest","method","token","then","res","body","undefined","first_name","last_name","email","Setores","em","obj","setor","filter","funcao","Usuarios_Setores","check","pdPdf","lePDF","criaEnvio","uploadDoc","arrayAxPDF","arrayAxEnvio","arrayAxUpload","i","push","Permissoes","arrayAx","onSubmit","dadosObj","objetoPermissoes","eval","permissao","fire","icon","text","customClass","confirmButton","marcaCheckEnvio","valor","checks","structuredClone","includes","splice","marcaCheckPdf","marcaCheckUpload","marcaCheckP","sm","xl","md","for","defaultValue","name","render","field","placeholder","type","readOnly","color","checked","onChange"],"mappings":"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","file":"static/js/46.893fa353.chunk.js","sourcesContent":["import { useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useIsAuthenticated } from \"@azure/msal-react\";\r\nconst jwt = require(\"jsonwebtoken\");\r\n\r\nimport { getToken } from \"../../services/Auth\";\r\n\r\nconst isAzure = () => {\r\n  let navigate = useNavigate();\r\n  const isAuthenticated = useIsAuthenticated();\r\n\r\n  useEffect(() => {\r\n    if (!isAuthenticated) {\r\n      navigate(\"/login\");\r\n    }else{\r\n      const payload = jwt.verify(getToken(), \"aIebX2X9oCZE1gCNFlE0lSxPAKVqJfL7+8WUcMVcz677+V6JnRomzKfg03EIR6VlSAf2kWQSiiTDP8MF3Js7is9i7+YdCPTw+sifbuNeeCZWLr1QJCrGaRacvD4qKzzpXNkNeKhDv0h6rQW/JJ8dX94rK5esVxtbupCptX8HzfL8rmUSLI/l78ddYfkb+RkuHH5PY8TYpdUBv1h3qUYo4L62QUX/Ze5wqhYUuhPvmOAYIoz7j4SABxT2JciOn9Wy1wraZ268VzhgLilykQBH5QC6lbNyfIegB79R0QYQrYk5IL1gfmxY2lKIDeCYB9p8NIF8qfCyD/RJMQOUEv9z9A==\");\r\n      if(!payload) {\r\n        navigate(\"/login\");\r\n      }\r\n    }\r\n  }, [isAuthenticated]);\r\n}\r\n\r\nexport default isAzure;","// ** React Imports\r\nimport { Fragment } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\n// ** Third Party Components\r\nimport Proptypes from \"prop-types\"\r\nimport classnames from \"classnames\"\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem\r\n} from \"reactstrap\"\r\n\r\nconst BreadCrumbs = (props) => {\r\n  // ** Props\r\n  const { data, title } = props\r\n\r\n  const renderBreadCrumbs = () => {\r\n    return data.map((item, index) => {\r\n      const Wrapper = item.link ? Link : Fragment\r\n      const isLastItem = data.length - 1 === index\r\n      return (\r\n        <BreadcrumbItem\r\n          tag=\"li\"\r\n          key={index}\r\n          active={!isLastItem}\r\n          className={classnames({ \"text-primary\": !isLastItem })}\r\n        >\r\n          <Wrapper {...(item.link ? { to: item.link } : {})}>\r\n            {item.title}\r\n          </Wrapper>\r\n        </BreadcrumbItem>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"content-header row\">\r\n      <div className=\"content-header-left col-md-9 col-12 mb-2\">\r\n        <div className=\"row breadcrumbs-top\">\r\n          <div className=\"col-12\">\r\n            {title ? (\r\n              <h2 className=\"content-header-title float-start mb-0\">{title}</h2>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            <div className=\"breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12\">\r\n              <Breadcrumb>\r\n                <BreadcrumbItem tag=\"li\">\r\n                  <Link to=\"/\">Home</Link>\r\n                </BreadcrumbItem>\r\n                {renderBreadCrumbs()}\r\n              </Breadcrumb>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default BreadCrumbs\r\n\r\n// ** PropTypes\r\nBreadCrumbs.propTypes = {\r\n  title: Proptypes.string.isRequired,\r\n  data: Proptypes.arrayOf(\r\n    Proptypes.shape({\r\n      link: Proptypes.string,\r\n      title: Proptypes.string.isRequired\r\n    })\r\n  )\r\n}\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Form,\r\n  Label,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Alert,\r\n} from \"reactstrap\";\r\nimport Select from \"react-select\";\r\nimport { selectThemeColors } from \"@utils\";\r\n\r\n// ** Custom Components\r\nimport Breadcrumbs from \"@components/breadcrumbs\";\r\nimport Cleave from \"cleave.js/react\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport classnames from \"classnames\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nconst MySwal = withReactContent(Swal);\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\n\r\n//components\r\nimport isAzure from \"../../../components/isAzure\";\r\nimport { getToken } from \"../../../services/Auth\";\r\nimport { httpRequest } from \"../../../services/Api\";\r\n\r\nconst UsuariosForm = () => {\r\n  isAzure();\r\n\r\n  const defaultValues = {};\r\n\r\n  const {\r\n    reset,\r\n    control,\r\n    setError,\r\n    handleSubmit,\r\n    register,\r\n    setValue,\r\n    formState: { errors },\r\n  } = useForm({ defaultValues });\r\n\r\n  const permissoesLista = [\r\n    {\r\n      id: 11,\r\n      nome: \"aprova-envio\",\r\n      descricao: \"Autorizar envio de e-mails\",\r\n      tipo: 1,\r\n    },\r\n    {\r\n      id: 12,\r\n      nome: \"cadastro\",\r\n      descricao: \"Cadastros\",\r\n      tipo: 2,\r\n    },\r\n    {\r\n      id: 2,\r\n      nome: \"cliente\",\r\n      descricao: \"Clientes\",\r\n      tipo: 3,\r\n    },\r\n    {\r\n      id: 13,\r\n      nome: \"empresa\",\r\n      descricao: \"Empresas\",\r\n      tipo: 3,\r\n    },\r\n    {\r\n      id: 3,\r\n      nome: \"funcionario\",\r\n      descricao: \"Funcionários\",\r\n      tipo: 3,\r\n    },\r\n    {\r\n      id: 8,\r\n      nome: \"envio\",\r\n      descricao: \"Envios\",\r\n      tipo: 2,\r\n    },\r\n    {\r\n      id: 14,\r\n      nome: \"documento\",\r\n      descricao: \"Documentos\",\r\n      tipo: 2,\r\n    },\r\n    {\r\n      id: 4,\r\n      nome: \"configuracao\",\r\n      descricao: \"Configuração\",\r\n      tipo: 2,\r\n    },\r\n    {\r\n      id: 5,\r\n      nome: \"tipoDocumento\",\r\n      descricao: \"Tipos de documentos\",\r\n      tipo: 3,\r\n    },\r\n    {\r\n      id: 7,\r\n      nome: \"setores\",\r\n      descricao: \"Setores\",\r\n      tipo: 3,\r\n    },\r\n    {\r\n      id: 6,\r\n      nome: \"email\",\r\n      descricao: \"E-mail\",\r\n      tipo: 3,\r\n    },\r\n    {\r\n      id: 9,\r\n      nome: \"log\",\r\n      descricao: \"Logs\",\r\n      tipo: 2,\r\n    },\r\n    {\r\n      id: 10,\r\n      nome: \"usuarios\",\r\n      descricao: \"Usuários\",\r\n      tipo: 2,\r\n    },\r\n  ];\r\n\r\n  let navigate = useNavigate();\r\n  let { id } = useParams();\r\n\r\n  const [dados, setDados] = useState([]);\r\n  const [data, setData] = useState(null);\r\n  const [selectedPdf, setSelectedPdf] = useState([]);\r\n  const [selectedUpload, setSelectedUpload] = useState([]);\r\n  const [selectedEnvio, setSelectedEnvio] = useState([]);\r\n  const [selectedP, setSelectedP] = useState([]);\r\n  const [setores, setSetores] = useState([]);\r\n  const [permissoes, setPermissoes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    httpRequest(`setores`, {\r\n      method: \"GET\",\r\n      token: getToken(),\r\n    }).then((res) => {\r\n      setSetores(res.body);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    httpRequest(`permissoes`, {\r\n      method: \"GET\",\r\n      token: getToken(),\r\n    }).then((res) => {\r\n      setPermissoes(res.body);\r\n    });\r\n  }, []);\r\n\r\n  //verifica se é edição\r\n  if (id !== undefined) {\r\n    useEffect(() => {\r\n      httpRequest(`usuarios/${id}`, {\r\n        method: \"GET\",\r\n        token: getToken(),\r\n      }).then((res) => {\r\n        setDados(res.body);\r\n        reset({\r\n          first_name: res.body.first_name,\r\n          last_name: res.body.last_name,\r\n          email: res.body.email,\r\n        });\r\n\r\n        //verificaPermissoes\r\n        if (res.body.Setores.length > 0) {\r\n          httpRequest(`setores`, {\r\n            method: \"GET\",\r\n            token: getToken(),\r\n          }).then((em) => {\r\n            let obj = em.body;\r\n            obj.map((setor, index) => {\r\n              res.body.Setores.filter(function (item) {\r\n                if (setor.id === item.id) {\r\n                  obj[index].funcao = item.Usuarios_Setores.tipo;\r\n                  obj[index].check = true;\r\n                  obj[index].pdPdf = item.Usuarios_Setores.permissoes ? item.Usuarios_Setores.permissoes.lePDF : false;\r\n                  obj[index].criaEnvio =\r\n                  item.Usuarios_Setores.permissoes ? item.Usuarios_Setores.permissoes.criaEnvio : false;\r\n                  obj[index].uploadDoc =\r\n                  item.Usuarios_Setores.permissoes ? item.Usuarios_Setores.permissoes.uploadDoc : false;\r\n                }\r\n              });\r\n            });\r\n            let arrayAxPDF = [];\r\n            let arrayAxEnvio = [];\r\n            let arrayAxUpload = [];\r\n            for (var i = obj.length - 1; i >= 0; i--) {\r\n              if (obj[i].check === true) {\r\n                if (obj[i].pdPdf) {\r\n                  arrayAxPDF.push(obj[i].id);\r\n                  setValue(`checkbox_d_pdf_${obj[i].id}`, true);\r\n                }\r\n                if (obj[i].criaEnvio) {\r\n                  arrayAxEnvio.push(obj[i].id);\r\n                  setValue(`checkbox_d_envio_${obj[i].id}`, true);\r\n                }\r\n                if (obj[i].uploadDoc) {\r\n                  arrayAxUpload.push(obj[i].id);\r\n                  setValue(`checkbox_d_up_${obj[i].id}`, true);\r\n                }\r\n              }\r\n            }\r\n            setSelectedPdf(arrayAxPDF);\r\n            setSelectedEnvio(arrayAxEnvio);\r\n            setSelectedUpload(arrayAxUpload);\r\n          });\r\n        }\r\n\r\n        httpRequest(`permissoes`, {\r\n          method: \"GET\",\r\n          token: getToken(),\r\n        }).then((em) => {\r\n          let obj = em.body;\r\n          obj.map((setor, index) => {\r\n            res.body.Permissoes.filter(function (item) {\r\n              if (setor.id === item.id) {\r\n                obj[index].check = true;\r\n              }\r\n            });\r\n          });\r\n          let arrayAx = [];\r\n          for (var i = obj.length - 1; i >= 0; i--) {\r\n            if (obj[i].check === true) {\r\n              arrayAx.push(obj[i].id);\r\n              setValue(`checkbox_p_${obj[i].id}`, true);\r\n            }\r\n          }\r\n          setSelectedP(arrayAx);\r\n        });\r\n      });\r\n    }, []);\r\n  }\r\n\r\n  const onSubmit = (data) => {\r\n    setData(data);\r\n\r\n    if (data.first_name !== \"\" && data.email !== \"\") {\r\n      const dadosObj = {\r\n        first_name: data.first_name,\r\n        last_name: data.last_name,\r\n        email: data.email,\r\n      };\r\n\r\n      let objetoPermissoes = [];\r\n      setores.map((setor, index) => {\r\n        dados.Setores.filter(function (item) {\r\n          if (setor.id === item.id) {\r\n            objetoPermissoes.push({\r\n              id: setor.id,\r\n              tipo: item.Usuarios_Setores.tipo,\r\n              permissoes: {\r\n                lePDF: eval(`data.checkbox_d_pdf_${setor.id}`),\r\n                criaEnvio: eval(`data.checkbox_d_envio_${setor.id}`),\r\n                uploadDoc: eval(`data.checkbox_d_up_${setor.id}`),\r\n              },\r\n            });\r\n          } else {\r\n            objetoPermissoes.push({\r\n              id: setor.id,\r\n              tipo: \"usuario\",\r\n              permissoes: {\r\n                lePDF: eval(`data.checkbox_d_pdf_${setor.id}`),\r\n                criaEnvio: eval(`data.checkbox_d_envio_${setor.id}`),\r\n                uploadDoc: eval(`data.checkbox_d_up_${setor.id}`),\r\n              },\r\n            });\r\n          }\r\n        });\r\n      });\r\n      dadosObj.Setores = objetoPermissoes;\r\n\r\n      dadosObj.Permissoes = [];\r\n      permissoes.map((permissao) => {\r\n        if (eval(`data.checkbox_p_${permissao.id}`)) {\r\n          dadosObj.Permissoes.push(permissao.id);\r\n        }\r\n      });\r\n\r\n      if (id === undefined) {\r\n        httpRequest(`usuarios`, {\r\n          method: \"POST\",\r\n          body: dadosObj,\r\n          token: getToken(),\r\n        }).then((res) => {\r\n          MySwal.fire({\r\n            icon: \"success\",\r\n            title: \"Sucesso!\",\r\n            text: \"Cadastro realizada com sucesso.\",\r\n            customClass: {\r\n              confirmButton: \"btn btn-success\",\r\n            },\r\n          });\r\n          navigate(\"/usuarios\");\r\n        });\r\n      } else {\r\n        httpRequest(`usuarios/${id}`, {\r\n          method: \"PUT\",\r\n          body: dadosObj,\r\n          token: getToken(),\r\n        }).then((res) => {\r\n          MySwal.fire({\r\n            icon: \"success\",\r\n            title: \"Sucesso!\",\r\n            text: \"Cadastro atualizado com sucesso.\",\r\n            customClass: {\r\n              confirmButton: \"btn btn-success\",\r\n            },\r\n          });\r\n          navigate(\"/usuarios\");\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  function marcaCheckEnvio(valor) {\r\n    let checks = structuredClone(selectedEnvio);\r\n    if (checks.length === 0) {\r\n      checks.push(valor.id);\r\n      setSelectedEnvio(checks);\r\n    } else {\r\n      if (checks.includes(valor.id)) {\r\n        for (var i = checks.length - 1; i >= 0; i--) {\r\n          if (checks[i] === valor.id) {\r\n            checks.splice(i, 1);\r\n          }\r\n        }\r\n        setSelectedEnvio(checks);\r\n      } else {\r\n        checks.push(valor.id);\r\n        setSelectedEnvio(checks);\r\n      }\r\n    }\r\n  }\r\n\r\n  function marcaCheckPdf(valor) {\r\n    let checks = structuredClone(selectedPdf);\r\n    if (checks.length === 0) {\r\n      checks.push(valor.id);\r\n      setSelectedPdf(checks);\r\n    } else {\r\n      if (checks.includes(valor.id)) {\r\n        for (var i = checks.length - 1; i >= 0; i--) {\r\n          if (checks[i] === valor.id) {\r\n            checks.splice(i, 1);\r\n          }\r\n        }\r\n        setSelectedPdf(checks);\r\n      } else {\r\n        checks.push(valor.id);\r\n        setSelectedPdf(checks);\r\n      }\r\n    }\r\n  }\r\n\r\n  function marcaCheckUpload(valor) {\r\n    let checks = structuredClone(selectedUpload);\r\n    if (checks.length === 0) {\r\n      checks.push(valor.id);\r\n      setSelectedUpload(checks);\r\n    } else {\r\n      if (checks.includes(valor.id)) {\r\n        for (var i = checks.length - 1; i >= 0; i--) {\r\n          if (checks[i] === valor.id) {\r\n            checks.splice(i, 1);\r\n          }\r\n        }\r\n        setSelectedUpload(checks);\r\n      } else {\r\n        checks.push(valor.id);\r\n        setSelectedUpload(checks);\r\n      }\r\n    }\r\n  }\r\n\r\n  function marcaCheckP(valor) {\r\n    let checks = structuredClone(selectedP);\r\n    if (checks.length === 0) {\r\n      checks.push(valor.id);\r\n      setSelectedP(checks);\r\n    } else {\r\n      if (checks.includes(valor.id)) {\r\n        for (var i = checks.length - 1; i >= 0; i--) {\r\n          if (checks[i] === valor.id) {\r\n            checks.splice(i, 1);\r\n          }\r\n        }\r\n        setSelectedP(checks);\r\n      } else {\r\n        checks.push(valor.id);\r\n        setSelectedP(checks);\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Breadcrumbs\r\n        title=\"Usuários\"\r\n        data={[\r\n          { title: \"Usuários\", link: \"/usuarios\" },\r\n          { title: \"Novo Usuário\" },\r\n        ]}\r\n      />\r\n      <Row>\r\n        <Col sm=\"12\">\r\n          <Card>\r\n            <CardBody>\r\n              <Form onSubmit={handleSubmit(onSubmit)}>\r\n                <Row>\r\n                  <Col className=\"mb-1\" xl=\"4\" md=\"6\" sm=\"12\">\r\n                    <Label className=\"form-label\" for=\"first_name\">\r\n                      Nome\r\n                    </Label>\r\n                    <Controller\r\n                      defaultValue=\"\"\r\n                      control={control}\r\n                      id=\"first_name\"\r\n                      name=\"first_name\"\r\n                      render={({ field }) => (\r\n                        <Input\r\n                          placeholder=\"Nome\"\r\n                          className={classnames(\"form-control\", {\r\n                            \"is-invalid\":\r\n                              data !== null &&\r\n                              (data.first_name === null ||\r\n                                !data.first_name.length),\r\n                          })}\r\n                          {...field}\r\n                        />\r\n                      )}\r\n                    />\r\n                  </Col>\r\n                  <Col className=\"mb-1\" xl=\"4\" md=\"6\" sm=\"12\">\r\n                    <Label className=\"form-label\" for=\"last_name\">\r\n                      Segundo Nome\r\n                    </Label>\r\n                    <Controller\r\n                      defaultValue=\"\"\r\n                      control={control}\r\n                      id=\"last_name\"\r\n                      name=\"last_name\"\r\n                      render={({ field }) => (\r\n                        <Input\r\n                          placeholder=\"Segundo Nome\"\r\n                          className={classnames(\"form-control\")}\r\n                          {...field}\r\n                        />\r\n                      )}\r\n                    />\r\n                  </Col>\r\n                  <Col className=\"mb-1\" xl=\"4\" md=\"6\" sm=\"12\">\r\n                    <Label className=\"form-label\" for=\"email\">\r\n                      E-mail\r\n                    </Label>\r\n                    <Controller\r\n                      defaultValue=\"\"\r\n                      control={control}\r\n                      id=\"email\"\r\n                      name=\"email\"\r\n                      render={({ field }) => (\r\n                        <Input\r\n                          type=\"email\"\r\n                          placeholder=\"E-mail\"\r\n                          className={classnames(\"form-control\", {\r\n                            \"is-invalid\":\r\n                              data !== null &&\r\n                              (data.email === null || !data.email.length),\r\n                          })}\r\n                          {...field}\r\n                          readOnly={`${id !== undefined ? \"readonly\" : \"\"}`}\r\n                        />\r\n                      )}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col xl=\"6\" md=\"6\" sm=\"12\">\r\n                    <Label className=\"form-label\" for=\"documentos\">\r\n                      Setores\r\n                    </Label>\r\n                    <div className={`${setores.length > 0 ? \"d-none\" : \"\"}`}>\r\n                      <Alert color=\"primary\">\r\n                        <div className=\"alert-body\">\r\n                          <span>Nenhum setor disponível</span>\r\n                        </div>\r\n                      </Alert>\r\n                    </div>\r\n                    {setores.map((setor, index) => (\r\n                      <div key={index} className=\"\">\r\n                        <div className=\"\">\r\n                          <div className=\"bg-dark\">\r\n                            <div className=\"text-white p-1 mt-2\">\r\n                              {setor.setor}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                          <div className=\"col\">\r\n                            <div className=\"demo-inline-spacing\">\r\n                              <div className=\"form-check form-check-inline\">\r\n                                <input\r\n                                  {...register(`checkbox_d_envio_${setor.id}`)}\r\n                                  className=\"form-check-input\"\r\n                                  type=\"checkbox\"\r\n                                  id={`checkbox_d_envio_${setor.id}`}\r\n                                  checked={\r\n                                    selectedEnvio.includes(setor.id)\r\n                                      ? true\r\n                                      : false\r\n                                  }\r\n                                  onChange={() => {\r\n                                    marcaCheckEnvio(setor);\r\n                                  }}\r\n                                />\r\n                                <Label\r\n                                  for={`checkbox_d_envio_${setor.id}`}\r\n                                  className=\"form-check-label\"\r\n                                >\r\n                                  Criar envio\r\n                                </Label>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col\">\r\n                            <div className=\"demo-inline-spacing\">\r\n                              <div className=\"form-check form-check-inline\">\r\n                                <input\r\n                                  {...register(`checkbox_d_up_${setor.id}`)}\r\n                                  className=\"form-check-input\"\r\n                                  type=\"checkbox\"\r\n                                  id={`checkbox_d_up_${setor.id}`}\r\n                                  checked={\r\n                                    selectedUpload.includes(setor.id)\r\n                                      ? true\r\n                                      : false\r\n                                  }\r\n                                  onChange={() => {\r\n                                    marcaCheckUpload(setor);\r\n                                  }}\r\n                                />\r\n                                <Label\r\n                                  for={`checkbox_d_up_${setor.id}`}\r\n                                  className=\"form-check-label\"\r\n                                >\r\n                                  Upload\r\n                                </Label>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col\">\r\n                            <div className=\"demo-inline-spacing\">\r\n                              <div className=\"form-check form-check-inline\">\r\n                                <input\r\n                                  {...register(`checkbox_d_pdf_${setor.id}`)}\r\n                                  className=\"form-check-input\"\r\n                                  type=\"checkbox\"\r\n                                  id={`checkbox_d_pdf_${setor.id}`}\r\n                                  checked={\r\n                                    selectedPdf.includes(setor.id)\r\n                                      ? true\r\n                                      : false\r\n                                  }\r\n                                  onChange={() => {\r\n                                    marcaCheckPdf(setor);\r\n                                  }}\r\n                                />\r\n                                <Label\r\n                                  for={`checkbox_d_pdf_${setor.id}`}\r\n                                  className=\"form-check-label\"\r\n                                >\r\n                                  Ver PDF\r\n                                </Label>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </Col>\r\n                  <Col xl=\"6\" md=\"6\" sm=\"12\">\r\n                    <Label className=\"form-label\" for=\"permissoes\">\r\n                      Permissões\r\n                    </Label>\r\n                    <div\r\n                      className={`${\r\n                        permissoesLista.length > 0 ? \"d-none\" : \"\"\r\n                      }`}\r\n                    >\r\n                      <Alert color=\"primary\">\r\n                        <div className=\"alert-body\">\r\n                          <span>Nenhum permissão disponível</span>\r\n                        </div>\r\n                      </Alert>\r\n                    </div>\r\n                    {permissoesLista.map((permissao, index) => (\r\n                      <div key={index} className=\"demo-inline-spacing\">\r\n                        <div className=\"form-check form-check-inline\">\r\n                          <input\r\n                            {...register(`checkbox_p_${permissao.id}`)}\r\n                            className=\"form-check-input\"\r\n                            type=\"checkbox\"\r\n                            id={`checkbox_p_${permissao.id}`}\r\n                            checked={\r\n                              selectedP.includes(permissao.id) ? true : false\r\n                            }\r\n                            onChange={() => {\r\n                              marcaCheckP(permissao);\r\n                            }}\r\n                          />\r\n\r\n                          <Label\r\n                            for={`checkbox_p_${permissao.id}`}\r\n                            className=\"form-check-label\"\r\n                          >\r\n                            {permissao.tipo === 3 ? \"- \" : \"\"}\r\n                            {permissao.descricao}\r\n                          </Label>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </Col>\r\n                </Row>\r\n\r\n                <div className=\" text-end w-100\">\r\n                  <Button type=\"submit\" color=\"primary\">\r\n                    Salvar\r\n                  </Button>\r\n                </div>\r\n              </Form>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default UsuariosForm;\r\n"],"sourceRoot":""}