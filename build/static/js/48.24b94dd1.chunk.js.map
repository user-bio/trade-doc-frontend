{"version":3,"sources":["views/usuarios/permissoes/index.jsx","components/isAzure/index.jsx","@core/components/breadcrumbs/index.js","components/Tooltip/index.jsx"],"names":["UsuariosPermissoes","isAzure","MySwal","withReactContent","Swal","defaultValues","_useForm","useForm","reset","control","setError","handleSubmit","register","setValue","errors","formState","permissoesLista","id","nome","descricao","tipo","_useState","useState","_useState2","_slicedToArray","dados","setDados","_useState3","_useState4","data","setData","_useState5","_useState6","selectedPdf","setSelectedPdf","_useState7","_useState8","selectedUpload","setSelectedUpload","_useState9","_useState10","selectedEnvio","setSelectedEnvio","_useState11","_useState12","selectedVer","setSelectedVer","_useState13","_useState14","selectedP","setSelectedP","_useState15","_useState16","setores","setSetores","_useState17","_useState18","permissoes","setPermissoes","_useState19","_useState20","usuarios","setUsuarios","_useState21","_useState22","selectedUsr","setSelectedUsr","marcaCheckEnvio","valor","checks","structuredClone","length","push","includes","i","splice","marcaCheckVer","marcaCheckPdf","marcaCheckUpload","marcaCheckP","marcaCheckUsr","useEffect","httpRequest","method","token","getToken","then","res","body","dadosLogado","JSON","parse","atob","split","result","filter","usuario","onSubmit","dadosObj","objetoPermissoes","forEach","setor","item","Setores","find","Usuarios_Setores","ver","eval","concat","lePDF","criaEnvio","uploadDoc","Permissoes","map","permissao","Usuarios","fire","icon","title","text","customClass","confirmButton","_jsxs","Fragment","children","_jsx","Breadcrumbs","link","Row","Col","sm","Card","CardBody","Form","xl","md","Label","className","for","Alert","color","index","_objectSpread","type","checked","onChange","Tooltip","tooltipText","placement","first_name","email","Button","jwt","require","navigate","useNavigate","isAuthenticated","useIsAuthenticated","verify","BreadCrumbs","props","Breadcrumb","BreadcrumbItem","tag","Link","to","Wrapper","isLastItem","active","classnames","TooltipItem","_ref","args","_objectWithoutProperties","_excluded","tooltipOpen","setTooltipOpen","href","target","rel","xmlns","width","height","fill","class","viewBox","d","isOpen","toggle","defaultProps","autohide","flip","argTypes","options"],"mappings":"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","file":"static/js/48.24b94dd1.chunk.js","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Form,\r\n  Label,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Alert,\r\n} from \"reactstrap\";\r\n\r\nimport Breadcrumbs from \"@components/breadcrumbs\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\n\r\n//components\r\nimport isAzure from \"../../../components/isAzure\";\r\nimport Tooltip from \"../../../components/Tooltip\";\r\nimport { getToken } from \"../../../services/Auth\";\r\nimport { httpRequest } from \"../../../services/Api\";\r\n\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst UsuariosPermissoes = () => {\r\n  isAzure();\r\n  \r\n  const MySwal = withReactContent(Swal);\r\n\r\n  const defaultValues = {};\r\n\r\n  const {\r\n    reset,\r\n    control,\r\n    setError,\r\n    handleSubmit,\r\n    register,\r\n    setValue,\r\n    formState: { errors },\r\n  } = useForm({ defaultValues });\r\n\r\n  const permissoesLista = [\r\n    {\r\n      id: 11,\r\n      nome: \"aprova-envio\",\r\n      descricao: \"Autorizar envio de e-mails\",\r\n      tipo: 1,\r\n    },\r\n    {\r\n      id: 12,\r\n      nome: \"cadastro\",\r\n      descricao: \"Cadastros\",\r\n      tipo: 2,\r\n    },\r\n    {\r\n      id: 2,\r\n      nome: \"cliente\",\r\n      descricao: \"Clientes\",\r\n      tipo: 3,\r\n    },\r\n    {\r\n      id: 13,\r\n      nome: \"empresa\",\r\n      descricao: \"Empresas\",\r\n      tipo: 3,\r\n    },\r\n    {\r\n      id: 3,\r\n      nome: \"funcionario\",\r\n      descricao: \"Funcionários\",\r\n      tipo: 3,\r\n    },\r\n    {\r\n      id: 8,\r\n      nome: \"envio\",\r\n      descricao: \"Envios\",\r\n      tipo: 2,\r\n    },\r\n    {\r\n      id: 14,\r\n      nome: \"documento\",\r\n      descricao: \"Documentos\",\r\n      tipo: 2,\r\n    },\r\n    {\r\n      id: 4,\r\n      nome: \"configuracao\",\r\n      descricao: \"Configuração\",\r\n      tipo: 2,\r\n    },\r\n    {\r\n      id: 5,\r\n      nome: \"tipoDocumento\",\r\n      descricao: \"Tipos de documentos\",\r\n      tipo: 3,\r\n    },\r\n    {\r\n      id: 7,\r\n      nome: \"setores\",\r\n      descricao: \"Setores\",\r\n      tipo: 3,\r\n    },\r\n    {\r\n      id: 6,\r\n      nome: \"email\",\r\n      descricao: \"E-mail\",\r\n      tipo: 3,\r\n    },\r\n    {\r\n      id: 9,\r\n      nome: \"log\",\r\n      descricao: \"Logs\",\r\n      tipo: 2,\r\n    },\r\n    {\r\n      id: 10,\r\n      nome: \"usuarios\",\r\n      descricao: \"Usuários\",\r\n      tipo: 2,\r\n    },\r\n  ];\r\n\r\n  const [dados, setDados] = useState([]);\r\n  const [data, setData] = useState(null);\r\n  const [selectedPdf, setSelectedPdf] = useState([]);\r\n  const [selectedUpload, setSelectedUpload] = useState([]);\r\n  const [selectedEnvio, setSelectedEnvio] = useState([]);\r\n  const [selectedVer, setSelectedVer] = useState([]);\r\n  const [selectedP, setSelectedP] = useState([]);\r\n  const [setores, setSetores] = useState([]);\r\n  const [permissoes, setPermissoes] = useState([]);\r\n  const [usuarios, setUsuarios] = useState([]);\r\n  const [selectedUsr, setSelectedUsr] = useState([]);\r\n\r\n  useEffect(() => {\r\n    httpRequest(`setores`, {\r\n      method: \"GET\",\r\n      token: getToken(),\r\n    }).then((res) => {\r\n      setSetores(res.body);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    httpRequest(`permissoes`, {\r\n      method: \"GET\",\r\n      token: getToken(),\r\n    }).then((res) => {\r\n      setPermissoes(res.body);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    httpRequest(`usuarios`, {\r\n      method: \"GET\",\r\n      token: getToken(),\r\n    }).then((res) => {\r\n      let dadosLogado = JSON.parse(atob(getToken().split(\".\")[1]));\r\n\r\n      const result = res.body.filter((usuario) => usuario.id != dadosLogado.id);\r\n      setUsuarios(result);\r\n    });\r\n  }, []);\r\n\r\n  function marcaCheckEnvio(valor) {\r\n    let checks = structuredClone(selectedEnvio);\r\n    if (checks.length === 0) {\r\n      checks.push(valor.id);\r\n      setSelectedEnvio(checks);\r\n    } else {\r\n      if (checks.includes(valor.id)) {\r\n        for (var i = checks.length - 1; i >= 0; i--) {\r\n          if (checks[i] === valor.id) {\r\n            checks.splice(i, 1);\r\n          }\r\n        }\r\n        setSelectedEnvio(checks);\r\n      } else {\r\n        checks.push(valor.id);\r\n        setSelectedEnvio(checks);\r\n      }\r\n    }\r\n  }\r\n\r\n  function marcaCheckVer(valor) {\r\n    let checks = structuredClone(selectedVer);\r\n    if (checks.length === 0) {\r\n      checks.push(valor.id);\r\n      setSelectedVer(checks);\r\n    } else {\r\n      if (checks.includes(valor.id)) {\r\n        for (var i = checks.length - 1; i >= 0; i--) {\r\n          if (checks[i] === valor.id) {\r\n            checks.splice(i, 1);\r\n          }\r\n        }\r\n        setSelectedVer(checks);\r\n      } else {\r\n        checks.push(valor.id);\r\n        setSelectedVer(checks);\r\n      }\r\n    }\r\n  }\r\n\r\n  function marcaCheckPdf(valor) {\r\n    let checks = structuredClone(selectedPdf);\r\n    if (checks.length === 0) {\r\n      checks.push(valor.id);\r\n      setSelectedPdf(checks);\r\n    } else {\r\n      if (checks.includes(valor.id)) {\r\n        for (var i = checks.length - 1; i >= 0; i--) {\r\n          if (checks[i] === valor.id) {\r\n            checks.splice(i, 1);\r\n          }\r\n        }\r\n        setSelectedPdf(checks);\r\n      } else {\r\n        checks.push(valor.id);\r\n        setSelectedPdf(checks);\r\n      }\r\n    }\r\n  }\r\n\r\n  function marcaCheckUpload(valor) {\r\n    let checks = structuredClone(selectedUpload);\r\n    if (checks.length === 0) {\r\n      checks.push(valor.id);\r\n      setSelectedUpload(checks);\r\n    } else {\r\n      if (checks.includes(valor.id)) {\r\n        for (var i = checks.length - 1; i >= 0; i--) {\r\n          if (checks[i] === valor.id) {\r\n            checks.splice(i, 1);\r\n          }\r\n        }\r\n        setSelectedUpload(checks);\r\n      } else {\r\n        checks.push(valor.id);\r\n        setSelectedUpload(checks);\r\n      }\r\n    }\r\n  }\r\n\r\n  function marcaCheckP(valor) {\r\n    let checks = structuredClone(selectedP);\r\n    if (checks.length === 0) {\r\n      checks.push(valor.id);\r\n      setSelectedP(checks);\r\n    } else {\r\n      if (checks.includes(valor.id)) {\r\n        for (var i = checks.length - 1; i >= 0; i--) {\r\n          if (checks[i] === valor.id) {\r\n            checks.splice(i, 1);\r\n          }\r\n        }\r\n        setSelectedP(checks);\r\n      } else {\r\n        checks.push(valor.id);\r\n        setSelectedP(checks);\r\n      }\r\n    }\r\n  }\r\n\r\n  function marcaCheckUsr(valor) {\r\n    let checks = structuredClone(selectedUsr);\r\n    if (checks.length === 0) {\r\n      checks.push(valor.id);\r\n      setSelectedUsr(checks);\r\n    } else {\r\n      if (checks.includes(valor.id)) {\r\n        for (var i = checks.length - 1; i >= 0; i--) {\r\n          if (checks[i] === valor.id) {\r\n            checks.splice(i, 1);\r\n          }\r\n        }\r\n        setSelectedUsr(checks);\r\n      } else {\r\n        checks.push(valor.id);\r\n        setSelectedUsr(checks);\r\n      }\r\n    }\r\n  }\r\n\r\n  const onSubmit = (data) => {\r\n    setData(data);\r\n\r\n    \r\n    const dadosObj = {};\r\n\r\n    let objetoPermissoes = [];\r\n      setores.forEach((setor) => { \r\n        const item = dados.Setores ? dados.Setores.find((item) => setor.id === item.id) : false;\r\n\r\n        objetoPermissoes.push({\r\n          id: setor.id,\r\n          tipo: item ? item.Usuarios_Setores.tipo : \"usuario\",\r\n          permissoes: {\r\n            ver: eval(`data.checkbox_d_ver_${setor.id}`),\r\n            lePDF: eval(`data.checkbox_d_pdf_${setor.id}`),\r\n            criaEnvio: eval(`data.checkbox_d_envio_${setor.id}`),\r\n            uploadDoc: eval(`data.checkbox_d_up_${setor.id}`),\r\n          },\r\n        });\r\n      });\r\n\r\n      dadosObj.Setores = objetoPermissoes;\r\n\r\n      dadosObj.Permissoes = [];\r\n      permissoes.map((permissao) => {\r\n        if (eval(`data.checkbox_p_${permissao.id}`)) {\r\n          dadosObj.Permissoes.push(permissao.id);\r\n        }\r\n      });\r\n\r\n      dadosObj.Usuarios = [];\r\n      usuarios.map((usuario) => {\r\n        if (eval(`data.checkbox_usr_${usuario.id}`)) {\r\n          dadosObj.Usuarios.push(usuario.id);\r\n        }\r\n      });\r\n\r\n      httpRequest(`usuarios/permissoes`, {\r\n        method: \"PUT\",\r\n        body: dadosObj,\r\n        token: getToken(),\r\n      }).then((res) => {\r\n        MySwal.fire({\r\n          icon: \"success\",\r\n          title: \"Sucesso!\",\r\n          text: \"Atualização de permissões realizada com sucesso.\",\r\n          customClass: {\r\n            confirmButton: \"btn btn-success\",\r\n          },\r\n        });\r\n        // navigate(\"/usuarios\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Breadcrumbs\r\n        title=\"Usuários\"\r\n        data={[\r\n          { title: \"Usuários\", link: \"/usuarios\" },\r\n          { title: \"Permissões\" },\r\n        ]}\r\n      />\r\n\r\n      <Row>\r\n        <Col sm=\"12\">\r\n          <Card>\r\n            <CardBody>\r\n              <Form onSubmit={handleSubmit(onSubmit)}>\r\n                <Row>\r\n                  <Col xl=\"8\" md=\"8\" sm=\"12\">\r\n                    <Label className=\"form-label\" for=\"documentos\">\r\n                      Setores\r\n                    </Label>\r\n                    <div className={`${setores.length > 0 ? \"d-none\" : \"\"}`}>\r\n                      <Alert color=\"primary\">\r\n                        <div className=\"alert-body\">\r\n                          <span>Nenhum setor disponível</span>\r\n                        </div>\r\n                      </Alert>\r\n                    </div>\r\n                    {setores.map((setor, index) => (\r\n                      <div key={index} className=\"\">\r\n                        <div className=\"\">\r\n                          <div className=\"bg-dark\">\r\n                            <div className=\"text-white p-1 mt-2\">\r\n                              {setor.setor}\r\n                            </div>\r\n                          </div>\r\n                        </div><div className=\"row\">\r\n                          <div className=\"col\">\r\n                            <div className=\"demo-inline-spacing\">\r\n                              <div className=\"form-check form-check-inline\">\r\n                                <input\r\n                                  {...register(`checkbox_d_ver_${setor.id}`)}\r\n                                  className=\"form-check-input\"\r\n                                  type=\"checkbox\"\r\n                                  id={`checkbox_d_ver_${setor.id}`}\r\n                                  checked={\r\n                                    selectedVer.includes(setor.id)\r\n                                      ? true\r\n                                      : false\r\n                                  }\r\n                                  onChange={() => {\r\n                                    marcaCheckVer(setor);\r\n                                  }}\r\n                                />\r\n                                <Label\r\n                                  for={`checkbox_d_ver_${setor.id}`}\r\n                                  className=\"form-check-label\"\r\n                                >\r\n                                  <div className=\"d-flex\">\r\n                                    <span className=\"pe-1 font-12\">Ver envio</span>\r\n                                    <Tooltip\r\n                                      id={\"envio-\"+setor.id+index}\r\n                                      tooltipText=\"Permite a visualização da TELA DE DOCUMENTOS\"\r\n                                      placement=\"top\"\r\n                                    />\r\n                                  </div>\r\n                                </Label>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col\">\r\n                            <div className=\"demo-inline-spacing\">\r\n                              <div className=\"form-check form-check-inline\">\r\n                                <input\r\n                                  {...register(`checkbox_d_envio_${setor.id}`)}\r\n                                  className=\"form-check-input\"\r\n                                  type=\"checkbox\"\r\n                                  id={`checkbox_d_envio_${setor.id}`}\r\n                                  checked={\r\n                                    selectedEnvio.includes(setor.id)\r\n                                      ? true\r\n                                      : false\r\n                                  }\r\n                                  onChange={() => {\r\n                                    marcaCheckEnvio(setor);\r\n                                  }}\r\n                                />\r\n                                <Label\r\n                                  for={`checkbox_d_envio_${setor.id}`}\r\n                                  className=\"form-check-label\"\r\n                                >\r\n                                  <div className=\"d-flex\">\r\n                                    <span className=\"pe-1 font-12\">Criar envio</span>\r\n                                    <Tooltip\r\n                                      id={\"criar-envio-\"+setor.id+index}\r\n                                      tooltipText=\"Permite a criação de novos envios na TELA DE ENVIOS\"\r\n                                      placement=\"top\"\r\n                                    />\r\n                                  </div>\r\n                                </Label>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col\">\r\n                            <div className=\"demo-inline-spacing\">\r\n                              <div className=\"form-check form-check-inline\">\r\n                                <input\r\n                                  {...register(`checkbox_d_up_${setor.id}`)}\r\n                                  className=\"form-check-input\"\r\n                                  type=\"checkbox\"\r\n                                  id={`checkbox_d_up_${setor.id}`}\r\n                                  checked={\r\n                                    selectedUpload.includes(setor.id)\r\n                                      ? true\r\n                                      : false\r\n                                  }\r\n                                  onChange={() => {\r\n                                    marcaCheckUpload(setor);\r\n                                  }}\r\n                                />\r\n                                <Label\r\n                                  for={`checkbox_d_up_${setor.id}`}\r\n                                  className=\"form-check-label\"\r\n                                >\r\n                                  <div className=\"d-flex\">\r\n                                    <span className=\"pe-1 font-12\">Upload</span>\r\n                                    <Tooltip\r\n                                      id={\"upload-\"+setor.id+index}\r\n                                      tooltipText=\"Permite o upload/atualização de documentos na TELA DE DOCUMENTOS\"\r\n                                      placement=\"top\"\r\n                                    />\r\n                                  </div>\r\n                                </Label>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col\">\r\n                            <div className=\"demo-inline-spacing\">\r\n                              <div className=\"form-check form-check-inline\">\r\n                                <input\r\n                                  {...register(`checkbox_d_pdf_${setor.id}`)}\r\n                                  className=\"form-check-input\"\r\n                                  type=\"checkbox\"\r\n                                  id={`checkbox_d_pdf_${setor.id}`}\r\n                                  checked={\r\n                                    selectedPdf.includes(setor.id)\r\n                                      ? true\r\n                                      : false\r\n                                  }\r\n                                  onChange={() => {\r\n                                    marcaCheckPdf(setor);\r\n                                  }}\r\n                                />\r\n                                <Label\r\n                                  for={`checkbox_d_pdf_${setor.id}`}\r\n                                  className=\"form-check-label\"\r\n                                >\r\n                                  <div className=\"d-flex\">\r\n                                    <span className=\"pe-1 font-12\">Ver PDF</span>\r\n                                    <Tooltip\r\n                                      id={\"pdf-\"+setor.id+index}\r\n                                      tooltipText=\"Permite a visualização do documento que está no sistema, através da TELA DE DOCUMENTOS\"\r\n                                      placement=\"top\"\r\n                                    />\r\n                                  </div>\r\n                                </Label>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </Col>\r\n                  <Col xl=\"4\" md=\"4\" sm=\"12\">\r\n                    <Label className=\"form-label\" for=\"permissoes\">\r\n                      Permissões\r\n                    </Label>\r\n                    <div\r\n                      className={`${\r\n                        permissoesLista.length > 0 ? \"d-none\" : \"\"\r\n                      }`}\r\n                    >\r\n                      <Alert color=\"primary\">\r\n                        <div className=\"alert-body\">\r\n                          <span>Nenhum permissão disponível</span>\r\n                        </div>\r\n                      </Alert>\r\n                    </div>\r\n                    {permissoesLista.map((permissao, index) => (\r\n                      <div key={index} className=\"demo-inline-spacing\">\r\n                        <div className=\"form-check form-check-inline\">\r\n                          <input\r\n                            {...register(`checkbox_p_${permissao.id}`)}\r\n                            className=\"form-check-input\"\r\n                            type=\"checkbox\"\r\n                            id={`checkbox_p_${permissao.id}`}\r\n                            onChange={() => {\r\n                              marcaCheckP(permissao);\r\n                            }}\r\n                          />\r\n\r\n                          <Label\r\n                            for={`checkbox_p_${permissao.id}`}\r\n                            className=\"form-check-label\"\r\n                          >\r\n                            {permissao.tipo === 3 ? \"- \" : \"\"}\r\n                            {permissao.descricao}\r\n                          </Label>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </Col>\r\n                </Row>\r\n\r\n                <Row className=\"pt-4\">\r\n                  <Col xl=\"12\">\r\n                    <Label className=\"form-label\" for=\"documentos\">\r\n                      Usuários\r\n                    </Label>\r\n                  </Col>\r\n                  {usuarios.map((usuario, index) => (\r\n                    <Col key={index} xl=\"6\" md=\"6\" sm=\"12\">\r\n                      <div className=\"demo-inline-spacing\">\r\n                        <div className=\"form-check form-check-inline\">\r\n                          <input\r\n                            {...register(`checkbox_usr_${usuario.id}`)}\r\n                            className=\"form-check-input\"\r\n                            type=\"checkbox\"\r\n                            id={`checkbox_usr_${usuario.id}`}\r\n                            onChange={() => {\r\n                              marcaCheckUsr(usuario);\r\n                            }}\r\n                          />\r\n                          <Label for={`checkbox_usr_${usuario.id}`} className=\"form-check-label\">\r\n                            {usuario.first_name} - {usuario.email}\r\n                          </Label>\r\n                        </div>\r\n                      </div>\r\n                    </Col>\r\n                  ))}\r\n                </Row>\r\n\r\n                <div className=\" text-end w-100\">\r\n                  <Button type=\"submit\" color=\"primary\">\r\n                    Salvar\r\n                  </Button>\r\n                </div>\r\n              </Form>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default UsuariosPermissoes;\r\n","import { useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useIsAuthenticated } from \"@azure/msal-react\";\r\nconst jwt = require(\"jsonwebtoken\");\r\n\r\nimport { getToken } from \"../../services/Auth\";\r\n\r\nconst isAzure = () => {\r\n  let navigate = useNavigate();\r\n  const isAuthenticated = useIsAuthenticated();\r\n\r\n  useEffect(() => {\r\n    if (!isAuthenticated) {\r\n      navigate(\"/login\");\r\n    }else{\r\n      const payload = jwt.verify(getToken(), \"aIebX2X9oCZE1gCNFlE0lSxPAKVqJfL7+8WUcMVcz677+V6JnRomzKfg03EIR6VlSAf2kWQSiiTDP8MF3Js7is9i7+YdCPTw+sifbuNeeCZWLr1QJCrGaRacvD4qKzzpXNkNeKhDv0h6rQW/JJ8dX94rK5esVxtbupCptX8HzfL8rmUSLI/l78ddYfkb+RkuHH5PY8TYpdUBv1h3qUYo4L62QUX/Ze5wqhYUuhPvmOAYIoz7j4SABxT2JciOn9Wy1wraZ268VzhgLilykQBH5QC6lbNyfIegB79R0QYQrYk5IL1gfmxY2lKIDeCYB9p8NIF8qfCyD/RJMQOUEv9z9A==\");\r\n      if(!payload) {\r\n        navigate(\"/login\");\r\n      }\r\n    }\r\n  }, [isAuthenticated]);\r\n}\r\n\r\nexport default isAzure;","// ** React Imports\r\nimport { Fragment } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\n// ** Third Party Components\r\nimport Proptypes from \"prop-types\"\r\nimport classnames from \"classnames\"\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem\r\n} from \"reactstrap\"\r\n\r\nconst BreadCrumbs = (props) => {\r\n  // ** Props\r\n  const { data, title } = props\r\n\r\n  const renderBreadCrumbs = () => {\r\n    return data.map((item, index) => {\r\n      const Wrapper = item.link ? Link : Fragment\r\n      const isLastItem = data.length - 1 === index\r\n      return (\r\n        <BreadcrumbItem\r\n          tag=\"li\"\r\n          key={index}\r\n          active={!isLastItem}\r\n          className={classnames({ \"text-primary\": !isLastItem })}\r\n        >\r\n          <Wrapper {...(item.link ? { to: item.link } : {})}>\r\n            {item.title}\r\n          </Wrapper>\r\n        </BreadcrumbItem>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"content-header row\">\r\n      <div className=\"content-header-left col-md-9 col-12 mb-2\">\r\n        <div className=\"row breadcrumbs-top\">\r\n          <div className=\"col-12\">\r\n            {title ? (\r\n              <h2 className=\"content-header-title float-start mb-0\">{title}</h2>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            <div className=\"breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12\">\r\n              <Breadcrumb>\r\n                <BreadcrumbItem tag=\"li\">\r\n                  <Link to=\"/\">Home</Link>\r\n                </BreadcrumbItem>\r\n                {renderBreadCrumbs()}\r\n              </Breadcrumb>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default BreadCrumbs\r\n\r\n// ** PropTypes\r\nBreadCrumbs.propTypes = {\r\n  title: Proptypes.string.isRequired,\r\n  data: Proptypes.arrayOf(\r\n    Proptypes.shape({\r\n      link: Proptypes.string,\r\n      title: Proptypes.string.isRequired\r\n    })\r\n  )\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Tooltip } from \"reactstrap\";\r\n\r\nfunction TooltipItem({ tooltipText, id, ...args }) {\r\n  const [tooltipOpen, setTooltipOpen] = useState(false);\r\n  const toggle = () => setTooltipOpen(!tooltipOpen);\r\n\r\n  return (\r\n    <div>\r\n      <p>\r\n        <a\r\n          href=\"https://example.com\"\r\n          target=\"_blank\"\r\n          rel=\"noreferrer\"\r\n          id={id}\r\n        >\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"16\"\r\n            height=\"16\"\r\n            fill=\"currentColor\"\r\n            class=\"bi bi-question-circle\"\r\n            viewBox=\"0 0 16 16\"\r\n          >\r\n            <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16\" />\r\n            <path d=\"M5.255 5.786a.237.237 0 0 0 .241.247h.825c.138 0 .248-.113.266-.25.09-.656.54-1.134 1.342-1.134.686 0 1.314.343 1.314 1.168 0 .635-.374.927-.965 1.371-.673.489-1.206 1.06-1.168 1.987l.003.217a.25.25 0 0 0 .25.246h.811a.25.25 0 0 0 .25-.25v-.105c0-.718.273-.927 1.01-1.486.609-.463 1.244-.977 1.244-2.056 0-1.511-1.276-2.241-2.673-2.241-1.267 0-2.655.59-2.75 2.286m1.557 5.763c0 .533.425.927 1.01.927.609 0 1.028-.394 1.028-.927 0-.552-.42-.94-1.029-.94-.584 0-1.009.388-1.009.94\" />\r\n          </svg>\r\n        </a>\r\n      </p>\r\n      <Tooltip\r\n        {...args}\r\n        isOpen={tooltipOpen}\r\n        target={id}\r\n        toggle={toggle}\r\n      >\r\n        {tooltipText || \"Hello world!\"}\r\n      </Tooltip>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Propriedades padrão para o TooltipItem\r\nTooltipItem.defaultProps = {\r\n  tooltipText: \"Hello world!\",\r\n  autohide: true,\r\n  flip: true,\r\n};\r\n\r\n// Opções de controle para o placement\r\nTooltipItem.argTypes = {\r\n  placement: {\r\n    control: { type: \"select\" },\r\n    options: [\"top\", \"left\", \"right\", \"bottom\"],\r\n  },\r\n};\r\n\r\nexport default TooltipItem;\r\n"],"sourceRoot":""}