{"version":3,"sources":["views/documentos/leitor/index.jsx","components/isAzure/index.jsx","@core/components/breadcrumbs/index.js","views/documentos/form/upload.jsx"],"names":["withReactContent","Swal","LeitorForm","isAzure","_useState","useState","_useState2","_slicedToArray","data","setData","_useState3","_useState4","dados","setDados","_useState5","_useState6","tabela","setResultado","_useForm","useForm","defaultValues","documento","handleSubmit","reset","control","setError","getInputProps","setValue","register","formState","errors","useNavigate","limpaValores","valor","result","String","replace","useEffect","_jsxs","Fragment","children","_jsx","Breadcrumbs","title","Row","Col","sm","Card","CardBody","Form","onSubmit","FormData","append","console","log","httpRequest","method","body","token","getToken","then","res","catch","error","className","xl","md","Label","for","Upload","id","funcao","class","length","Button","type","color","map","index","width","Texts","text","position","scope","R","T","x","y","jwt","require","navigate","isAuthenticated","useIsAuthenticated","verify","BreadCrumbs","props","Breadcrumb","BreadcrumbItem","tag","Link","to","item","Wrapper","link","isLastItem","active","classnames","_objectSpread","files","setFiles","ativo","setAtivo","_useDropzone","useDropzone","multiple","accept","onDrop","acceptedFiles","rejectedFiles","toast","concat","_toConsumableArray","file","Object","assign","getRootProps","renderFilePreview","startsWith","alt","name","src","URL","createObjectURL","height","FileText","size","fileList","ListGroupItem","Math","round","toFixed","outline","onClick","filtered","filter","i","handleRemoveFile","X","DownloadCloud","href","e","preventDefault","ListGroup"],"mappings":"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","file":"static/js/36.b7e8d95e.chunk.js","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Form,\r\n  Label,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Button,\r\n} from \"reactstrap\";\r\n\r\n// ** Third Party Components\r\nimport Breadcrumbs from \"@components/breadcrumbs\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport classnames from \"classnames\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nconst MySwal = withReactContent(Swal);\r\nimport { useNavigate, useParams, useLocation } from \"react-router-dom\";\r\nimport Flatpickr from \"react-flatpickr\";\r\nimport { pt } from \"flatpickr/dist/l10n/pt\";\r\n\r\n// ** Custom Components\r\n\r\n// ** Styles\r\nimport \"@styles/react/libs/flatpickr/flatpickr.scss\";\r\nimport \"@styles/react/libs/file-uploader/file-uploader.scss\";\r\n\r\n//components\r\nimport isAzure from \"../../../components/isAzure\";\r\nimport { getToken } from \"../../../services/Auth\";\r\nimport { httpRequest } from \"../../../services/Api\";\r\n\r\nimport Upload from \"../form/upload\";\r\n\r\nconst LeitorForm = () => {\r\n  isAzure();\r\n\r\n  const defaultValues = {\r\n    documento: null,\r\n  };\r\n\r\n  const [data, setData] = useState(null);\r\n  const [dados, setDados] = useState(null);\r\n  const [tabela, setResultado] = useState([]);\r\n\r\n  const {\r\n    reset,\r\n    control,\r\n    setError,\r\n    getInputProps,\r\n    handleSubmit,\r\n    setValue,\r\n    register,\r\n    formState: { errors },\r\n  } = useForm({ defaultValues });\r\n\r\n  let navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (dados !== null) {\r\n      setValue(\"documento\", dados);\r\n    }\r\n  }, [dados]);\r\n\r\n  function limpaValores(valor) {\r\n    let result = String(valor);\r\n    result = result.replace(/%20/g, \" \");\r\n    result = result.replace(/%2F/g, \"/\");\r\n    result = result.replace(/%3A/g, \"\");\r\n    result = result.replace(/%2C/g, \",\");\r\n    result = result.replace(/%24/g, \"$\");\r\n    result = result.replace(/%C3%A7/g, \"ç\");\r\n    result = result.replace(/%C3%A9/g, \"é\");\r\n    result = result.replace(/%C3%AD/g, \"í\");\r\n    result = result.replace(/%C3%A1/g, \"á\");\r\n    result = result.replace(/%C3%B3/g, \"ó\");\r\n    result = result.replace(/%C3%BA/g, \"ú\");\r\n    result = result.replace(/%C3%A3/g, \"ã\");\r\n    result = result.replace(/%C3%83/g, \"Ã\");\r\n    result = result.replace(/%C3%B5/g, \"õ\");\r\n    result = result.replace(/%C2%BA/g, \"o\");\r\n    result = result.replace(/%C3%AA/g, \"ê\");\r\n\r\n    return result;\r\n  }\r\n\r\n  const onSubmit = (data) => {\r\n    setData(data);\r\n\r\n    let documentoTrue = false;\r\n    if (data.documento === null) {\r\n      documentoTrue = false;\r\n    } else {\r\n      documentoTrue = true;\r\n    }\r\n\r\n    if (documentoTrue === true) {\r\n      const dados = new FormData();\r\n      dados.append(\"file\", data.documento[0]);\r\n\r\n      console.log(\"chegamos aqui\");\r\n      httpRequest(`documentos/leitor`, {\r\n        method: \"POST\",\r\n        body: dados,\r\n        token: getToken(),\r\n      })\r\n        .then((res) => {\r\n          let result = res.body;\r\n          setResultado(result);\r\n          console.log(132323);\r\n          console.log(result);\r\n        })\r\n        .catch((error) => console.log(error));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Breadcrumbs title=\"Configurações\" data={[{ title: \"Leitor PDF\" }]} />\r\n      <Row>\r\n        <Col sm=\"12\">\r\n          <Card>\r\n            <CardBody>\r\n              <Form onSubmit={handleSubmit(onSubmit)}>\r\n                <Row>\r\n                  <Col className={`mb-1`} xl=\"12\" md=\"12\" sm=\"12\">\r\n                    <Label className=\"form-label\" for=\"documento\">\r\n                      Documento\r\n                    </Label>\r\n                    <Upload\r\n                      id=\"documento\"\r\n                      funcao={setDados}\r\n                      class={\r\n                        data !== null &&\r\n                        (data.documento === null || !data.documento.length)\r\n                          ? \"border-danger\"\r\n                          : \"\"\r\n                      }\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <div className=\" text-end w-100\">\r\n                  <Button type=\"submit\" color=\"primary\">\r\n                    Executar\r\n                  </Button>\r\n                </div>\r\n                <Row>\r\n                  <Col className={`mb-1`} xl=\"12\" md=\"12\" sm=\"12\">\r\n                    <div>\r\n                      {tabela.map((res, index) => (\r\n                        <div key={index}>\r\n                          <h3 className=\"mb-2 mt-2\">Página {index + 1}</h3>\r\n                          <div className=\"AjusteTabela\">\r\n                            <table className=\"table\">\r\n                              <thead>\r\n                                <tr>\r\n                                  <th width=\"15%\">#</th>\r\n                                  <th width=\"55%\">Texto</th>\r\n                                  <th width=\"15%\">X</th>\r\n                                  <th width=\"15%\">Y</th>\r\n                                </tr>\r\n                              </thead>\r\n                              <tbody>\r\n                                {res.Texts.map((text, position) => (\r\n                                  <tr key={position}>\r\n                                    <th scope=\"row\">{position + 1}</th>\r\n                                    <td>{limpaValores(text.R[0].T)}</td>\r\n                                    <td>{text.x}</td>\r\n                                    <td>{text.y}</td>\r\n                                  </tr>\r\n                                ))}\r\n                              </tbody>\r\n                            </table>\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default LeitorForm;\r\n","import { useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useIsAuthenticated } from \"@azure/msal-react\";\r\nconst jwt = require(\"jsonwebtoken\");\r\n\r\nimport { getToken } from \"../../services/Auth\";\r\n\r\nconst isAzure = () => {\r\n  let navigate = useNavigate();\r\n  const isAuthenticated = useIsAuthenticated();\r\n\r\n  useEffect(() => {\r\n    if (!isAuthenticated) {\r\n      navigate(\"/login\");\r\n    }else{\r\n      const payload = jwt.verify(getToken(), \"aIebX2X9oCZE1gCNFlE0lSxPAKVqJfL7+8WUcMVcz677+V6JnRomzKfg03EIR6VlSAf2kWQSiiTDP8MF3Js7is9i7+YdCPTw+sifbuNeeCZWLr1QJCrGaRacvD4qKzzpXNkNeKhDv0h6rQW/JJ8dX94rK5esVxtbupCptX8HzfL8rmUSLI/l78ddYfkb+RkuHH5PY8TYpdUBv1h3qUYo4L62QUX/Ze5wqhYUuhPvmOAYIoz7j4SABxT2JciOn9Wy1wraZ268VzhgLilykQBH5QC6lbNyfIegB79R0QYQrYk5IL1gfmxY2lKIDeCYB9p8NIF8qfCyD/RJMQOUEv9z9A==\");\r\n      if(!payload) {\r\n        navigate(\"/login\");\r\n      }\r\n    }\r\n  }, [isAuthenticated]);\r\n}\r\n\r\nexport default isAzure;","// ** React Imports\r\nimport { Fragment } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\n// ** Third Party Components\r\nimport Proptypes from \"prop-types\"\r\nimport classnames from \"classnames\"\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem\r\n} from \"reactstrap\"\r\n\r\nconst BreadCrumbs = (props) => {\r\n  // ** Props\r\n  const { data, title } = props\r\n\r\n  const renderBreadCrumbs = () => {\r\n    return data.map((item, index) => {\r\n      const Wrapper = item.link ? Link : Fragment\r\n      const isLastItem = data.length - 1 === index\r\n      return (\r\n        <BreadcrumbItem\r\n          tag=\"li\"\r\n          key={index}\r\n          active={!isLastItem}\r\n          className={classnames({ \"text-primary\": !isLastItem })}\r\n        >\r\n          <Wrapper {...(item.link ? { to: item.link } : {})}>\r\n            {item.title}\r\n          </Wrapper>\r\n        </BreadcrumbItem>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"content-header row\">\r\n      <div className=\"content-header-left col-md-9 col-12 mb-2\">\r\n        <div className=\"row breadcrumbs-top\">\r\n          <div className=\"col-12\">\r\n            {title ? (\r\n              <h2 className=\"content-header-title float-start mb-0\">{title}</h2>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            <div className=\"breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12\">\r\n              <Breadcrumb>\r\n                <BreadcrumbItem tag=\"li\">\r\n                  <Link to=\"/\">Home</Link>\r\n                </BreadcrumbItem>\r\n                {renderBreadCrumbs()}\r\n              </Breadcrumb>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default BreadCrumbs\r\n\r\n// ** PropTypes\r\nBreadCrumbs.propTypes = {\r\n  title: Proptypes.string.isRequired,\r\n  data: Proptypes.arrayOf(\r\n    Proptypes.shape({\r\n      link: Proptypes.string,\r\n      title: Proptypes.string.isRequired\r\n    })\r\n  )\r\n}\r\n","// ** React Imports\r\nimport React, { useState, Fragment } from \"react\";\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardBody, Button, ListGroup, ListGroupItem } from \"reactstrap\";\r\n\r\n// ** Third Party Imports\r\nimport toast from \"react-hot-toast\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { FileText, X, DownloadCloud } from \"react-feather\";\r\n\r\nconst Upload = (props) => {\r\n  // ** State\r\n  const [files, setFiles] = useState([]);\r\n  const [ativo, setAtivo] = useState(false);\r\n\r\n  const { getRootProps, getInputProps } = useDropzone({\r\n    multiple: false,\r\n    accept: {\r\n      \"application/pdf\": [\".pdf\"],\r\n    },\r\n    onDrop: (acceptedFiles, rejectedFiles) => {\r\n      if (rejectedFiles.length) {\r\n        toast.error(\"Você só pode fazer upload de arquivos de PDF!\");\r\n      } else {\r\n        setFiles([\r\n          ...files,\r\n          ...acceptedFiles.map((file) => Object.assign(file)),\r\n        ]);\r\n        props.funcao(acceptedFiles)\r\n        setAtivo(true)\r\n      }\r\n    },\r\n  });\r\n\r\n  const renderFilePreview = (file) => {\r\n    if (file.type.startsWith(\"image\")) {\r\n      return (\r\n        <img\r\n          className=\"rounded\"\r\n          alt={file.name}\r\n          src={URL.createObjectURL(file)}\r\n          height=\"28\"\r\n          width=\"28\"\r\n        />\r\n      );\r\n    } else {\r\n      return <FileText size=\"28\" />;\r\n    }\r\n  };\r\n\r\n  const handleRemoveFile = (file) => {\r\n    const uploadedFiles = files;\r\n    const filtered = uploadedFiles.filter((i) => i.name !== file.name);\r\n    setFiles([...filtered]);\r\n\r\n    props.funcao([])\r\n    setAtivo(false)\r\n  };\r\n\r\n  const renderFileSize = (size) => {\r\n    if (Math.round(size / 100) / 10 > 1000) {\r\n      return `${(Math.round(size / 100) / 10000).toFixed(1)} mb`;\r\n    } else {\r\n      return `${(Math.round(size / 100) / 10).toFixed(1)} kb`;\r\n    }\r\n  };\r\n\r\n  const fileList = files.map((file, index) => (\r\n    <ListGroupItem\r\n      key={`${file.name}-${index}`}\r\n      className=\"d-flex align-items-center justify-content-between\"\r\n    >\r\n      <div className=\"file-details d-flex align-items-center\">\r\n        <div className=\"file-preview me-1\">{renderFilePreview(file)}</div>\r\n        <div>\r\n          <p className=\"file-name mb-0\">{file.name}</p>\r\n          <p className=\"file-size mb-0\">{renderFileSize(file.size)}</p>\r\n        </div>\r\n      </div>\r\n      <Button\r\n        color=\"danger\"\r\n        outline\r\n        size=\"sm\"\r\n        className=\"btn-icon\"\r\n        onClick={() => handleRemoveFile(file)}\r\n      >\r\n        <X size={14} />\r\n      </Button>\r\n    </ListGroupItem>\r\n  ));\r\n\r\n  const handleRemoveAllFiles = () => {\r\n    props.funcao([])\r\n    setFiles([]);\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <CardBody className={`p-0`}>\r\n        <div {...getRootProps()} className={`dropzone ${props.class} ${ ativo ? 'd-none' : '' }`}>\r\n          <input {...getInputProps()} />\r\n          <div className=\"d-flex align-items-center justify-content-center flex-column\">\r\n            <DownloadCloud size={64} />\r\n            <h5>Arraste seu arquivo ou clique em localizar</h5>\r\n            <p className=\"text-secondary\">\r\n              Arraste ou clique em{\" \"}\r\n              <a href=\"/\" onClick={(e) => e.preventDefault()}>\r\n                localizar\r\n              </a>{\" \"}\r\n              para selecionar em seu dispositivo\r\n            </p>\r\n          </div>\r\n        </div>\r\n        {files.length ? (\r\n          <Fragment>\r\n            <ListGroup className=\"my-2\">{fileList}</ListGroup>\r\n          </Fragment>\r\n        ) : null}\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Upload;\r\n"],"sourceRoot":""}