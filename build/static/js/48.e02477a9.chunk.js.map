{"version":3,"sources":["views/usuarios/form/index.jsx","components/isAzure/index.jsx","@core/components/breadcrumbs/index.js"],"names":["MySwal","withReactContent","Swal","UsuariosForm","isAzure","defaultValues","_useForm","useForm","reset","control","setError","handleSubmit","register","setValue","errors","formState","permissoesLista","id","nome","descricao","tipo","navigate","useNavigate","_useParams","useParams","_useState","useState","_useState2","_slicedToArray","dados","setDados","_useState3","_useState4","data","setData","_useState5","_useState6","selectedPdf","setSelectedPdf","_useState7","_useState8","selectedUpload","setSelectedUpload","_useState9","_useState10","selectedEnvio","setSelectedEnvio","_useState11","_useState12","selectedP","setSelectedP","_useState13","_useState14","setores","setSetores","_useState15","_useState16","permissoes","setPermissoes","useEffect","httpRequest","method","token","getToken","then","res","body","undefined","concat","console","log","first_name","last_name","email","Setores","length","em","obj","map","setor","index","filter","item","funcao","Usuarios_Setores","check","pdPdf","lePDF","criaEnvio","uploadDoc","arrayAxPDF","arrayAxEnvio","arrayAxUpload","i","push","Permissoes","arrayAx","onSubmit","dadosObj","objetoPermissoes","forEach","find","eval","permissao","fire","icon","title","text","customClass","confirmButton","marcaCheckEnvio","valor","checks","structuredClone","includes","splice","marcaCheckPdf","marcaCheckUpload","marcaCheckP","_jsxs","Fragment","children","_jsx","Breadcrumbs","link","Row","Col","sm","Card","CardBody","Form","className","xl","md","Label","for","Controller","defaultValue","name","render","_ref","field","Input","_objectSpread","placeholder","classnames","_ref2","_ref3","type","readOnly","Alert","color","checked","onChange","Button","jwt","require","isAuthenticated","useIsAuthenticated","verify","BreadCrumbs","props","Breadcrumb","BreadcrumbItem","tag","Link","to","Wrapper","isLastItem","active"],"mappings":"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","file":"static/js/48.e02477a9.chunk.js","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Form,\r\n  Label,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Alert,\r\n} from \"reactstrap\";\r\nimport Select from \"react-select\";\r\nimport { selectThemeColors } from \"@utils\";\r\n\r\n// ** Custom Components\r\nimport Breadcrumbs from \"@components/breadcrumbs\";\r\nimport Cleave from \"cleave.js/react\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport classnames from \"classnames\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nconst MySwal = withReactContent(Swal);\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\n\r\n//components\r\nimport isAzure from \"../../../components/isAzure\";\r\nimport { getToken } from \"../../../services/Auth\";\r\nimport { httpRequest } from \"../../../services/Api\";\r\n\r\nconst UsuariosForm = () => {\r\n  isAzure();\r\n\r\n  const defaultValues = {};\r\n\r\n  const {\r\n    reset,\r\n    control,\r\n    setError,\r\n    handleSubmit,\r\n    register,\r\n    setValue,\r\n    formState: { errors },\r\n  } = useForm({ defaultValues });\r\n\r\n  const permissoesLista = [\r\n    {\r\n      id: 11,\r\n      nome: \"aprova-envio\",\r\n      descricao: \"Autorizar envio de e-mails\",\r\n      tipo: 1,\r\n    },\r\n    {\r\n      id: 12,\r\n      nome: \"cadastro\",\r\n      descricao: \"Cadastros\",\r\n      tipo: 2,\r\n    },\r\n    {\r\n      id: 2,\r\n      nome: \"cliente\",\r\n      descricao: \"Clientes\",\r\n      tipo: 3,\r\n    },\r\n    {\r\n      id: 13,\r\n      nome: \"empresa\",\r\n      descricao: \"Empresas\",\r\n      tipo: 3,\r\n    },\r\n    {\r\n      id: 3,\r\n      nome: \"funcionario\",\r\n      descricao: \"Funcionários\",\r\n      tipo: 3,\r\n    },\r\n    {\r\n      id: 8,\r\n      nome: \"envio\",\r\n      descricao: \"Envios\",\r\n      tipo: 2,\r\n    },\r\n    {\r\n      id: 14,\r\n      nome: \"documento\",\r\n      descricao: \"Documentos\",\r\n      tipo: 2,\r\n    },\r\n    {\r\n      id: 4,\r\n      nome: \"configuracao\",\r\n      descricao: \"Configuração\",\r\n      tipo: 2,\r\n    },\r\n    {\r\n      id: 5,\r\n      nome: \"tipoDocumento\",\r\n      descricao: \"Tipos de documentos\",\r\n      tipo: 3,\r\n    },\r\n    {\r\n      id: 7,\r\n      nome: \"setores\",\r\n      descricao: \"Setores\",\r\n      tipo: 3,\r\n    },\r\n    {\r\n      id: 6,\r\n      nome: \"email\",\r\n      descricao: \"E-mail\",\r\n      tipo: 3,\r\n    },\r\n    {\r\n      id: 9,\r\n      nome: \"log\",\r\n      descricao: \"Logs\",\r\n      tipo: 2,\r\n    },\r\n    {\r\n      id: 10,\r\n      nome: \"usuarios\",\r\n      descricao: \"Usuários\",\r\n      tipo: 2,\r\n    },\r\n  ];\r\n\r\n  let navigate = useNavigate();\r\n  let { id } = useParams();\r\n\r\n  const [dados, setDados] = useState([]);\r\n  const [data, setData] = useState(null);\r\n  const [selectedPdf, setSelectedPdf] = useState([]);\r\n  const [selectedUpload, setSelectedUpload] = useState([]);\r\n  const [selectedEnvio, setSelectedEnvio] = useState([]);\r\n  const [selectedP, setSelectedP] = useState([]);\r\n  const [setores, setSetores] = useState([]);\r\n  const [permissoes, setPermissoes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    httpRequest(`setores`, {\r\n      method: \"GET\",\r\n      token: getToken(),\r\n    }).then((res) => {\r\n      setSetores(res.body);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    httpRequest(`permissoes`, {\r\n      method: \"GET\",\r\n      token: getToken(),\r\n    }).then((res) => {\r\n      setPermissoes(res.body);\r\n    });\r\n  }, []);\r\n\r\n  //verifica se é edição\r\n  if (id !== undefined) {\r\n    useEffect(() => {\r\n      httpRequest(`usuarios/${id}`, {\r\n        method: \"GET\",\r\n        token: getToken(),\r\n      }).then((res) => {\r\n        console.log(res.body);\r\n        setDados(res.body);\r\n        reset({\r\n          first_name: res.body.first_name,\r\n          last_name: res.body.last_name,\r\n          email: res.body.email,\r\n        });\r\n\r\n        //verificaPermissoes\r\n        if (res.body.Setores.length > 0) {\r\n          httpRequest(`setores`, {\r\n            method: \"GET\",\r\n            token: getToken(),\r\n          }).then((em) => {\r\n            let obj = em.body;\r\n            obj.map((setor, index) => {\r\n              res.body.Setores.filter(function (item) {\r\n                if (setor.id === item.id) {\r\n                  obj[index].funcao = item.Usuarios_Setores.tipo;\r\n                  obj[index].check = true;\r\n                  obj[index].pdPdf = item.Usuarios_Setores.permissoes\r\n                    ? item.Usuarios_Setores.permissoes.lePDF\r\n                    : false;\r\n                  obj[index].criaEnvio = item.Usuarios_Setores.permissoes\r\n                    ? item.Usuarios_Setores.permissoes.criaEnvio\r\n                    : false;\r\n                  obj[index].uploadDoc = item.Usuarios_Setores.permissoes\r\n                    ? item.Usuarios_Setores.permissoes.uploadDoc\r\n                    : false;\r\n                }\r\n              });\r\n            });\r\n            let arrayAxPDF = [];\r\n            let arrayAxEnvio = [];\r\n            let arrayAxUpload = [];\r\n            for (var i = obj.length - 1; i >= 0; i--) {\r\n              if (obj[i].check === true) {\r\n                if (obj[i].pdPdf) {\r\n                  arrayAxPDF.push(obj[i].id);\r\n                  setValue(`checkbox_d_pdf_${obj[i].id}`, true);\r\n                }\r\n                if (obj[i].criaEnvio) {\r\n                  arrayAxEnvio.push(obj[i].id);\r\n                  setValue(`checkbox_d_envio_${obj[i].id}`, true);\r\n                }\r\n                if (obj[i].uploadDoc) {\r\n                  arrayAxUpload.push(obj[i].id);\r\n                  setValue(`checkbox_d_up_${obj[i].id}`, true);\r\n                }\r\n              }\r\n            }\r\n            setSelectedPdf(arrayAxPDF);\r\n            setSelectedEnvio(arrayAxEnvio);\r\n            setSelectedUpload(arrayAxUpload);\r\n          });\r\n        }\r\n\r\n        httpRequest(`permissoes`, {\r\n          method: \"GET\",\r\n          token: getToken(),\r\n        }).then((em) => {\r\n          let obj = em.body;\r\n          obj.map((setor, index) => {\r\n            res.body.Permissoes.filter(function (item) {\r\n              if (setor.id === item.id) {\r\n                obj[index].check = true;\r\n              }\r\n            });\r\n          });\r\n          let arrayAx = [];\r\n          for (var i = obj.length - 1; i >= 0; i--) {\r\n            if (obj[i].check === true) {\r\n              arrayAx.push(obj[i].id);\r\n              setValue(`checkbox_p_${obj[i].id}`, true);\r\n            }\r\n          }\r\n          setSelectedP(arrayAx);\r\n        });\r\n      });\r\n    }, []);\r\n  }\r\n\r\n  const onSubmit = (data) => {\r\n    setData(data);\r\n\r\n    if (data.first_name !== \"\" && data.email !== \"\") {\r\n      const dadosObj = {\r\n        first_name: data.first_name,\r\n        last_name: data.last_name,\r\n        email: data.email,\r\n      };\r\n\r\n      // let objetoPermissoes = [];\r\n      // setores.map((setor, index) => {\r\n      //   dados.Setores.filter(function (item) {\r\n      //     if (setor.id === item.id) {\r\n      //       objetoPermissoes.push({\r\n      //         id: setor.id,\r\n      //         tipo: item.Usuarios_Setores.tipo,\r\n      //         permissoes: {\r\n      //           lePDF: eval(`data.checkbox_d_pdf_${setor.id}`),\r\n      //           criaEnvio: eval(`data.checkbox_d_envio_${setor.id}`),\r\n      //           uploadDoc: eval(`data.checkbox_d_up_${setor.id}`),\r\n      //         },\r\n      //       });\r\n      //     } else {\r\n      //       objetoPermissoes.push({\r\n      //         id: setor.id,\r\n      //         tipo: \"usuario\",\r\n      //         permissoes: {\r\n      //           lePDF: eval(`data.checkbox_d_pdf_${setor.id}`),\r\n      //           criaEnvio: eval(`data.checkbox_d_envio_${setor.id}`),\r\n      //           uploadDoc: eval(`data.checkbox_d_up_${setor.id}`),\r\n      //         },\r\n      //       });\r\n      //     }\r\n      //   });\r\n      // });\r\n      let objetoPermissoes = [];\r\n      setores.forEach((setor) => { \r\n        const item = dados.Setores ? dados.Setores.find((item) => setor.id === item.id) : false;\r\n\r\n        objetoPermissoes.push({\r\n          id: setor.id,\r\n          tipo: item ? item.Usuarios_Setores.tipo : \"usuario\",\r\n          permissoes: {\r\n            lePDF: eval(`data.checkbox_d_pdf_${setor.id}`),\r\n            criaEnvio: eval(`data.checkbox_d_envio_${setor.id}`),\r\n            uploadDoc: eval(`data.checkbox_d_up_${setor.id}`),\r\n          },\r\n        });\r\n      });\r\n\r\n      dadosObj.Setores = objetoPermissoes;\r\n\r\n      dadosObj.Permissoes = [];\r\n      permissoes.map((permissao) => {\r\n        if (eval(`data.checkbox_p_${permissao.id}`)) {\r\n          dadosObj.Permissoes.push(permissao.id);\r\n        }\r\n      });\r\n\r\n      if (id === undefined) {\r\n        httpRequest(`usuarios`, {\r\n          method: \"POST\",\r\n          body: dadosObj,\r\n          token: getToken(),\r\n        }).then((res) => {\r\n          MySwal.fire({\r\n            icon: \"success\",\r\n            title: \"Sucesso!\",\r\n            text: \"Cadastro realizada com sucesso.\",\r\n            customClass: {\r\n              confirmButton: \"btn btn-success\",\r\n            },\r\n          });\r\n          navigate(\"/usuarios\");\r\n        });\r\n      } else {\r\n        httpRequest(`usuarios/${id}`, {\r\n          method: \"PUT\",\r\n          body: dadosObj,\r\n          token: getToken(),\r\n        }).then((res) => {\r\n          MySwal.fire({\r\n            icon: \"success\",\r\n            title: \"Sucesso!\",\r\n            text: \"Cadastro atualizado com sucesso.\",\r\n            customClass: {\r\n              confirmButton: \"btn btn-success\",\r\n            },\r\n          });\r\n          navigate(\"/usuarios\");\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  function marcaCheckEnvio(valor) {\r\n    let checks = structuredClone(selectedEnvio);\r\n    if (checks.length === 0) {\r\n      checks.push(valor.id);\r\n      setSelectedEnvio(checks);\r\n    } else {\r\n      if (checks.includes(valor.id)) {\r\n        for (var i = checks.length - 1; i >= 0; i--) {\r\n          if (checks[i] === valor.id) {\r\n            checks.splice(i, 1);\r\n          }\r\n        }\r\n        setSelectedEnvio(checks);\r\n      } else {\r\n        checks.push(valor.id);\r\n        setSelectedEnvio(checks);\r\n      }\r\n    }\r\n  }\r\n\r\n  function marcaCheckPdf(valor) {\r\n    let checks = structuredClone(selectedPdf);\r\n    if (checks.length === 0) {\r\n      checks.push(valor.id);\r\n      setSelectedPdf(checks);\r\n    } else {\r\n      if (checks.includes(valor.id)) {\r\n        for (var i = checks.length - 1; i >= 0; i--) {\r\n          if (checks[i] === valor.id) {\r\n            checks.splice(i, 1);\r\n          }\r\n        }\r\n        setSelectedPdf(checks);\r\n      } else {\r\n        checks.push(valor.id);\r\n        setSelectedPdf(checks);\r\n      }\r\n    }\r\n  }\r\n\r\n  function marcaCheckUpload(valor) {\r\n    let checks = structuredClone(selectedUpload);\r\n    if (checks.length === 0) {\r\n      checks.push(valor.id);\r\n      setSelectedUpload(checks);\r\n    } else {\r\n      if (checks.includes(valor.id)) {\r\n        for (var i = checks.length - 1; i >= 0; i--) {\r\n          if (checks[i] === valor.id) {\r\n            checks.splice(i, 1);\r\n          }\r\n        }\r\n        setSelectedUpload(checks);\r\n      } else {\r\n        checks.push(valor.id);\r\n        setSelectedUpload(checks);\r\n      }\r\n    }\r\n  }\r\n\r\n  function marcaCheckP(valor) {\r\n    let checks = structuredClone(selectedP);\r\n    if (checks.length === 0) {\r\n      checks.push(valor.id);\r\n      setSelectedP(checks);\r\n    } else {\r\n      if (checks.includes(valor.id)) {\r\n        for (var i = checks.length - 1; i >= 0; i--) {\r\n          if (checks[i] === valor.id) {\r\n            checks.splice(i, 1);\r\n          }\r\n        }\r\n        setSelectedP(checks);\r\n      } else {\r\n        checks.push(valor.id);\r\n        setSelectedP(checks);\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Breadcrumbs\r\n        title=\"Usuários\"\r\n        data={[\r\n          { title: \"Usuários\", link: \"/usuarios\" },\r\n          { title: \"Novo Usuário\" },\r\n        ]}\r\n      />\r\n      <Row>\r\n        <Col sm=\"12\">\r\n          <Card>\r\n            <CardBody>\r\n              <Form onSubmit={handleSubmit(onSubmit)}>\r\n                <Row>\r\n                  <Col className=\"mb-1\" xl=\"4\" md=\"6\" sm=\"12\">\r\n                    <Label className=\"form-label\" for=\"first_name\">\r\n                      Nome\r\n                    </Label>\r\n                    <Controller\r\n                      defaultValue=\"\"\r\n                      control={control}\r\n                      id=\"first_name\"\r\n                      name=\"first_name\"\r\n                      render={({ field }) => (\r\n                        <Input\r\n                          placeholder=\"Nome\"\r\n                          className={classnames(\"form-control\", {\r\n                            \"is-invalid\":\r\n                              data !== null &&\r\n                              (data.first_name === null ||\r\n                                !data.first_name.length),\r\n                          })}\r\n                          {...field}\r\n                        />\r\n                      )}\r\n                    />\r\n                  </Col>\r\n                  <Col className=\"mb-1\" xl=\"4\" md=\"6\" sm=\"12\">\r\n                    <Label className=\"form-label\" for=\"last_name\">\r\n                      Segundo Nome\r\n                    </Label>\r\n                    <Controller\r\n                      defaultValue=\"\"\r\n                      control={control}\r\n                      id=\"last_name\"\r\n                      name=\"last_name\"\r\n                      render={({ field }) => (\r\n                        <Input\r\n                          placeholder=\"Segundo Nome\"\r\n                          className={classnames(\"form-control\")}\r\n                          {...field}\r\n                        />\r\n                      )}\r\n                    />\r\n                  </Col>\r\n                  <Col className=\"mb-1\" xl=\"4\" md=\"6\" sm=\"12\">\r\n                    <Label className=\"form-label\" for=\"email\">\r\n                      E-mail\r\n                    </Label>\r\n                    <Controller\r\n                      defaultValue=\"\"\r\n                      control={control}\r\n                      id=\"email\"\r\n                      name=\"email\"\r\n                      render={({ field }) => (\r\n                        <Input\r\n                          type=\"email\"\r\n                          placeholder=\"E-mail\"\r\n                          className={classnames(\"form-control\", {\r\n                            \"is-invalid\":\r\n                              data !== null &&\r\n                              (data.email === null || !data.email.length),\r\n                          })}\r\n                          {...field}\r\n                          readOnly={`${id !== undefined ? \"readonly\" : \"\"}`}\r\n                        />\r\n                      )}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col xl=\"6\" md=\"6\" sm=\"12\">\r\n                    <Label className=\"form-label\" for=\"documentos\">\r\n                      Setores\r\n                    </Label>\r\n                    <div className={`${setores.length > 0 ? \"d-none\" : \"\"}`}>\r\n                      <Alert color=\"primary\">\r\n                        <div className=\"alert-body\">\r\n                          <span>Nenhum setor disponível</span>\r\n                        </div>\r\n                      </Alert>\r\n                    </div>\r\n                    {setores.map((setor, index) => (\r\n                      <div key={index} className=\"\">\r\n                        <div className=\"\">\r\n                          <div className=\"bg-dark\">\r\n                            <div className=\"text-white p-1 mt-2\">\r\n                              {setor.setor}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                          <div className=\"col\">\r\n                            <div className=\"demo-inline-spacing\">\r\n                              <div className=\"form-check form-check-inline\">\r\n                                <input\r\n                                  {...register(`checkbox_d_envio_${setor.id}`)}\r\n                                  className=\"form-check-input\"\r\n                                  type=\"checkbox\"\r\n                                  id={`checkbox_d_envio_${setor.id}`}\r\n                                  checked={\r\n                                    selectedEnvio.includes(setor.id)\r\n                                      ? true\r\n                                      : false\r\n                                  }\r\n                                  onChange={() => {\r\n                                    marcaCheckEnvio(setor);\r\n                                  }}\r\n                                />\r\n                                <Label\r\n                                  for={`checkbox_d_envio_${setor.id}`}\r\n                                  className=\"form-check-label\"\r\n                                >\r\n                                  Criar envio\r\n                                </Label>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col\">\r\n                            <div className=\"demo-inline-spacing\">\r\n                              <div className=\"form-check form-check-inline\">\r\n                                <input\r\n                                  {...register(`checkbox_d_up_${setor.id}`)}\r\n                                  className=\"form-check-input\"\r\n                                  type=\"checkbox\"\r\n                                  id={`checkbox_d_up_${setor.id}`}\r\n                                  checked={\r\n                                    selectedUpload.includes(setor.id)\r\n                                      ? true\r\n                                      : false\r\n                                  }\r\n                                  onChange={() => {\r\n                                    marcaCheckUpload(setor);\r\n                                  }}\r\n                                />\r\n                                <Label\r\n                                  for={`checkbox_d_up_${setor.id}`}\r\n                                  className=\"form-check-label\"\r\n                                >\r\n                                  Upload\r\n                                </Label>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col\">\r\n                            <div className=\"demo-inline-spacing\">\r\n                              <div className=\"form-check form-check-inline\">\r\n                                <input\r\n                                  {...register(`checkbox_d_pdf_${setor.id}`)}\r\n                                  className=\"form-check-input\"\r\n                                  type=\"checkbox\"\r\n                                  id={`checkbox_d_pdf_${setor.id}`}\r\n                                  checked={\r\n                                    selectedPdf.includes(setor.id)\r\n                                      ? true\r\n                                      : false\r\n                                  }\r\n                                  onChange={() => {\r\n                                    marcaCheckPdf(setor);\r\n                                  }}\r\n                                />\r\n                                <Label\r\n                                  for={`checkbox_d_pdf_${setor.id}`}\r\n                                  className=\"form-check-label\"\r\n                                >\r\n                                  Ver PDF\r\n                                </Label>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </Col>\r\n                  <Col xl=\"6\" md=\"6\" sm=\"12\">\r\n                    <Label className=\"form-label\" for=\"permissoes\">\r\n                      Permissões\r\n                    </Label>\r\n                    <div\r\n                      className={`${\r\n                        permissoesLista.length > 0 ? \"d-none\" : \"\"\r\n                      }`}\r\n                    >\r\n                      <Alert color=\"primary\">\r\n                        <div className=\"alert-body\">\r\n                          <span>Nenhum permissão disponível</span>\r\n                        </div>\r\n                      </Alert>\r\n                    </div>\r\n                    {permissoesLista.map((permissao, index) => (\r\n                      <div key={index} className=\"demo-inline-spacing\">\r\n                        <div className=\"form-check form-check-inline\">\r\n                          <input\r\n                            {...register(`checkbox_p_${permissao.id}`)}\r\n                            className=\"form-check-input\"\r\n                            type=\"checkbox\"\r\n                            id={`checkbox_p_${permissao.id}`}\r\n                            checked={\r\n                              selectedP.includes(permissao.id) ? true : false\r\n                            }\r\n                            onChange={() => {\r\n                              marcaCheckP(permissao);\r\n                            }}\r\n                          />\r\n\r\n                          <Label\r\n                            for={`checkbox_p_${permissao.id}`}\r\n                            className=\"form-check-label\"\r\n                          >\r\n                            {permissao.tipo === 3 ? \"- \" : \"\"}\r\n                            {permissao.descricao}\r\n                          </Label>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </Col>\r\n                </Row>\r\n\r\n                <div className=\" text-end w-100\">\r\n                  <Button type=\"submit\" color=\"primary\">\r\n                    Salvar\r\n                  </Button>\r\n                </div>\r\n              </Form>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default UsuariosForm;\r\n","import { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useIsAuthenticated } from \"@azure/msal-react\";\nconst jwt = require(\"jsonwebtoken\");\n\nimport { getToken } from \"../../services/Auth\";\n\nconst isAzure = () => {\n  let navigate = useNavigate();\n  const isAuthenticated = useIsAuthenticated();\n\n  useEffect(() => {\n    if (!isAuthenticated) {\n      navigate(\"/login\");\n    }else{\n      const payload = jwt.verify(getToken(), \"aIebX2X9oCZE1gCNFlE0lSxPAKVqJfL7+8WUcMVcz677+V6JnRomzKfg03EIR6VlSAf2kWQSiiTDP8MF3Js7is9i7+YdCPTw+sifbuNeeCZWLr1QJCrGaRacvD4qKzzpXNkNeKhDv0h6rQW/JJ8dX94rK5esVxtbupCptX8HzfL8rmUSLI/l78ddYfkb+RkuHH5PY8TYpdUBv1h3qUYo4L62QUX/Ze5wqhYUuhPvmOAYIoz7j4SABxT2JciOn9Wy1wraZ268VzhgLilykQBH5QC6lbNyfIegB79R0QYQrYk5IL1gfmxY2lKIDeCYB9p8NIF8qfCyD/RJMQOUEv9z9A==\");\n      if(!payload) {\n        navigate(\"/login\");\n      }\n    }\n  }, [isAuthenticated]);\n}\n\nexport default isAzure;","// ** React Imports\nimport { Fragment } from \"react\"\nimport { Link } from \"react-router-dom\"\n\n// ** Third Party Components\nimport Proptypes from \"prop-types\"\nimport classnames from \"classnames\"\n\n// ** Reactstrap Imports\nimport {\n  Breadcrumb,\n  BreadcrumbItem\n} from \"reactstrap\"\n\nconst BreadCrumbs = (props) => {\n  // ** Props\n  const { data, title } = props\n\n  const renderBreadCrumbs = () => {\n    return data.map((item, index) => {\n      const Wrapper = item.link ? Link : Fragment\n      const isLastItem = data.length - 1 === index\n      return (\n        <BreadcrumbItem\n          tag=\"li\"\n          key={index}\n          active={!isLastItem}\n          className={classnames({ \"text-primary\": !isLastItem })}\n        >\n          <Wrapper {...(item.link ? { to: item.link } : {})}>\n            {item.title}\n          </Wrapper>\n        </BreadcrumbItem>\n      )\n    })\n  }\n\n  return (\n    <div className=\"content-header row\">\n      <div className=\"content-header-left col-md-9 col-12 mb-2\">\n        <div className=\"row breadcrumbs-top\">\n          <div className=\"col-12\">\n            {title ? (\n              <h2 className=\"content-header-title float-start mb-0\">{title}</h2>\n            ) : (\n              \"\"\n            )}\n            <div className=\"breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12\">\n              <Breadcrumb>\n                <BreadcrumbItem tag=\"li\">\n                  <Link to=\"/\">Home</Link>\n                </BreadcrumbItem>\n                {renderBreadCrumbs()}\n              </Breadcrumb>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default BreadCrumbs\n\n// ** PropTypes\nBreadCrumbs.propTypes = {\n  title: Proptypes.string.isRequired,\n  data: Proptypes.arrayOf(\n    Proptypes.shape({\n      link: Proptypes.string,\n      title: Proptypes.string.isRequired\n    })\n  )\n}\n"],"sourceRoot":""}